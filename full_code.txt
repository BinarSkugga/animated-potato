packageio.binarskugga;importio.binarskugga.engine.Engine;publicclassMain{publicstaticvoidmain(String[]args){Engineengine=newEngine();engine.start();}}

packageio.binarskugga;publicclassConstants{//MathpublicstaticfinalintLOMONT_FAST_INVSQRT=0x5F375A86;//WindowpublicstaticintFPS_CAP=240;publicstaticintMSAA_SAMPLES=4;//KeyboardpublicstaticfinalintCONSECUTIVE_PRESS_TIMEOUT_MS=200;//ScenepublicstaticfinalintMAX_LIGHTS=1024;}

packageio.binarskugga.engine;importio.binarskugga.content.World;importio.binarskugga.content.components.*;importio.binarskugga.content.systems.AnimationSystem;importio.binarskugga.content.systems.ControlSystem;importio.binarskugga.content.systems.LightSystem;importio.binarskugga.content.systems.RenderSystem;importio.binarskugga.engine.input.KeyboardButton;importio.binarskugga.engine.rendering.Camera2D;importio.binarskugga.engine.rendering.MeshBatch;importio.binarskugga.engine.rendering.TextureAtlas;importio.binarskugga.event.EventBus;importio.binarskugga.event.ISubscriber;importio.binarskugga.event.impl.KeyEvent;importio.binarskugga.math.StaticMath;importio.binarskugga.math.Vec2f;importio.binarskugga.math.Vec2i;importio.binarskugga.math.Vec3f;importlombok.Getter;importnet.engio.mbassy.listener.Handler;importnet.engio.mbassy.listener.Listener;importorg.lwjgl.opengl.GL;importstaticorg.lwjgl.opengl.GL11.*;importstaticorg.lwjgl.opengl.GL11.GL_BLEND;importstaticorg.lwjgl.opengl.GL11.GL_DEPTH_TEST;importstaticorg.lwjgl.opengl.GL11.GL_LESS;importstaticorg.lwjgl.opengl.GL11.GL_ONE_MINUS_SRC_ALPHA;importstaticorg.lwjgl.opengl.GL11.GL_SRC_ALPHA;importstaticorg.lwjgl.opengl.GL11.glBlendFunc;importstaticorg.lwjgl.opengl.GL11.glDepthFunc;importstaticorg.lwjgl.opengl.GL11.glEnable;importstaticorg.lwjgl.opengl.GL13.GL_MULTISAMPLE;@ListenerpublicclassEngineimplementsISubscriber{@GetterprivatefinalWindowwindow;@GetterprivatefinalWorldworld;privateScenetestScene;privateintsceneIdx=0;publicEngine(){StaticMath.computeSinTable();StaticMath.computeCosTable();EventBus.global.subscribe(this);this.window=newWindow(1200,720,"Test");this.world=newWorld();this.world.addSystems(newControlSystem(),newLightSystem(),newRenderSystem(),newAnimationSystem());inttileSize=64;for(inti=0;i<15;i++){for(intj=0;j<15;j++){this.world.createEntity().add(newRenderComponent("main","quad","environment",newVec2i(0,0))).add(newTransformComponent(newVec3f(i*tileSize,j*tileSize,0.0f),newVec2f(tileSize,tileSize)));}}this.world.createEntity().add(newAmbientLightComponent(newVec3f(1.0f,1.0f,1.0f),0.5f));this.world.createEntity().add(newLightComponent(newVec3f(1.0f,1.0f,1.0f),10.0f)).add(newTransformComponent(newVec3f(300,300,1),newVec2f(1.0f,1.0f)));this.world.createEntity().add(newRenderComponent("main","quad","character",newVec2i(0,0))).add(newTransformComponent(newVec3f(100f,100f,5.0f),newVec2f(100f,100f),0.0f)).add(newPlayerComponent(4.0f)).add(newAnimationComponent(4));this.testScene=newScene();this.testScene.cameras().put("main",newCamera2D(window));this.testScene.meshes().put("quad",newMeshBatch(newint[]{0,1,2,3},newfloat[]{0f,0f,0f,0f,1f,0f,1f,0f,0f,1f,1f,0f},1_000_000));this.testScene.atlases().put("image",newTextureAtlas("image",150,150,0));this.testScene.atlases().put("image2",newTextureAtlas("image2",250,300,0));this.testScene.atlases().put("character",newTextureAtlas("character",256/4,256/4,0));this.testScene.atlases().put("environment",newTextureAtlas("environment",16,16,0));}publicvoidstart(){this.window.initialize();this.inititalizeGL();this.testScene.initialize();while(!this.window.shouldClose()){this.window.pollEvents();Scenescene=this.sceneIdx==0?this.testScene:null;this.world.update(Clock.global,scene);this.window.swapBuffers();Clock.global.tick();}this.testScene.destroy();this.window.destroy();}@HandlerprivatevoidonTab(KeyEventevent){if(event.key!=KeyboardButton.TAB||!event.isReleased())return;if(this.sceneIdx==0)this.sceneIdx=1;elseif(this.sceneIdx==1)this.sceneIdx=0;}privatevoidinititalizeGL(){GL.createCapabilities();glClearColor(0f,0f,0f,1.0f);glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);glEnable(GL_CULL_FACE);glEnable(GL_DEPTH_TEST);glEnable(GL_BLEND);glEnable(GL_MULTISAMPLE);glDepthFunc(GL_LESS);glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);glDepthMask(true);}}

packageio.binarskugga.engine;importio.binarskugga.engine.input.KeyboardInputHandler;importio.binarskugga.event.EventBus;importio.binarskugga.event.ISubscriber;importio.binarskugga.event.impl.*;importlombok.Getter;importlombok.Setter;importnet.engio.mbassy.listener.Handler;importnet.engio.mbassy.listener.Listener;importorg.lwjgl.glfw.GLFWVidMode;importstaticio.binarskugga.Constants.MSAA_SAMPLES;importstaticorg.lwjgl.glfw.GLFW.*;importstaticorg.lwjgl.glfw.Callbacks.glfwFreeCallbacks;importstaticorg.lwjgl.glfw.GLFWErrorCallback.createPrint;importstaticorg.lwjgl.system.MemoryUtil.NULL;@ListenerpublicclassWindowimplementsISubscriber,ILowLevelResource{@Getter@Setterprivateintwidth,height;@Getter@Setterprivatebooleanvsync=false;@Getter@SetterprivateStringtitle;privateKeyboardInputHandlerkeyboardHandler;@Getterprivatelongid=0;publicWindow(intwidth,intheight,Stringtitle){EventBus.global.subscribe(this);this.width=width;this.height=height;this.title=title;this.keyboardHandler=newKeyboardInputHandler();}@Overridepublicvoidinitialize(){createPrint(System.err).set();if(!glfwInit())thrownewIllegalStateException("FailedtoinitializeGLFW.");glfwDefaultWindowHints();glfwWindowHint(GLFW_VISIBLE,GLFW_TRUE);glfwWindowHint(GLFW_RESIZABLE,GLFW_TRUE);glfwWindowHint(GLFW_SAMPLES,MSAA_SAMPLES);this.id=glfwCreateWindow(this.width,this.height,this.title,NULL,NULL);if(this.id==NULL)thrownewIllegalStateException("FailedtocreatetheGLFWwindow.");GLFWVidModemode=glfwGetVideoMode(glfwGetPrimaryMonitor());if(mode==null)thrownewIllegalStateException("Failedtogetmonitorvideomode.");//glfwSetWindowPos(//this.id,//(mode.width()-this.width)/2,//(mode.height()-this.height)/2//);glfwMakeContextCurrent(this.id);glfwSwapInterval(this.vsync?1:0);glfwShowWindow(this.id);glfwSetFramebufferSizeCallback(this.id,(window,width,height)->{this.width=width;this.height=height;EventBus.global.publish(newWindowResizeEvent(window,width,height));});glfwSetCursorPosCallback(this.id,(window,x,y)->{EventBus.global.publish(newMouseMoveEvent(window,x,y));});glfwSetScrollCallback(this.id,(window,x,y)->{double[]xpos=newdouble[1];double[]ypos=newdouble[1];glfwGetCursorPos(window,xpos,ypos);EventBus.global.publish(newMouseScrollEvent(window,x,y,xpos[0],ypos[0]));});}@Overridepublicvoiddestroy(){glfwFreeCallbacks(this.id);glfwDestroyWindow(this.id);glfwTerminate();}publicbooleanshouldClose(){returnglfwWindowShouldClose(this.id);}publicvoidswapBuffers(){glfwSwapBuffers(this.id);}publicvoidpollEvents(){glfwPollEvents();this.keyboardHandler.process(this.id);}@HandlerpublicvoidonClockSecondTick(ClockSecondResetEventevent){glfwSetWindowTitle(this.id,this.title+"-"+event.fps+"FPS");}}

packageio.binarskugga.engine;publicinterfaceILowLevelResource{voidinitialize();voiddestroy();}

packageio.binarskugga.engine;importio.binarskugga.event.EventBus;importio.binarskugga.event.impl.ClockSecondResetEvent;importlombok.Getter;importlombok.Setter;importjava.util.concurrent.TimeUnit;importstaticio.binarskugga.Constants.FPS_CAP;publicclassClock{publicstaticfinalClockglobal;static{global=newClock();}privatefinallongsecondInNanos=TimeUnit.SECONDS.toNanos(1);privatefinallongmilliInNanos=TimeUnit.MILLISECONDS.toNanos(1);@SetterprivateintdesiredFPS=FPS_CAP;@Getterprivateintfps=0;@Getterprivatelongdelta=0L;privatelongframeStart;privatelongaccDelta=0L;publicClock(){this.frameStart=this.time();}publiclongtime(){returnSystem.nanoTime();}publicvoidtick(){longaimedDelta=0;if(this.desiredFPS>0)aimedDelta=this.secondInNanos/this.desiredFPS;longeventTime=0L;longeventDelta=0L;inteventFPS=0;longrenderDelta=0L;try{longframeEnd=this.time();renderDelta=frameEnd-this.frameStart;eventTime=frameEnd;eventFPS=this.fps;if(renderDelta>=aimedDelta){eventDelta=this.delta;this.delta=renderDelta;return;}if(this.desiredFPS!=-1){longmillis=(aimedDelta-renderDelta)/this.milliInNanos;intnanos=(int)((aimedDelta-renderDelta)%this.milliInNanos);Thread.sleep(millis,nanos);}eventDelta=aimedDelta;this.delta=aimedDelta;}catch(InterruptedExceptione){}finally{this.fps++;this.accDelta+=eventDelta;if(this.accDelta>=this.secondInNanos){System.out.println("Rendertime:"+(float)renderDelta/milliInNanos);EventBus.global.publish(newClockSecondResetEvent(eventTime,eventDelta,eventFPS));this.fps=1;this.accDelta=this.accDelta-this.secondInNanos;}this.frameStart=this.time();}}}

packageio.binarskugga.engine;importio.binarskugga.engine.light.AmbientLight;importio.binarskugga.engine.light.Light;importio.binarskugga.engine.light.LightBuffer;importio.binarskugga.math.Vec2f;importio.binarskugga.math.Vec3f;importlombok.Getter;importlombok.Setter;importnet.engio.mbassy.listener.Listener;importjava.util.ArrayList;importjava.util.List;@ListenerpublicclassSceneimplementsILowLevelResource{@Getterprivatebooleaninitialized;@GetterprivatefinalShadersshaders;@GetterprivatefinalTexturestextures;@GetterprivatefinalTextureAtlasesatlases;@GetterprivatefinalCamerascameras;@GetterprivatefinalMeshBatchesmeshes;@GetterprivatefinalLightBufferlightBuffer;@Getter@SetterprivateAmbientLightambientLight;@Getter@SetterprivateList<Light>lights;publicScene(){this.initialized=false;this.shaders=newShaders("src/main/resources/shaders/");this.textures=newTextures("src/main/resources/textures/");this.atlases=newTextureAtlases(this.textures);this.cameras=newCameras();this.meshes=newMeshBatches();this.lightBuffer=newLightBuffer(0);}@Overridepublicvoidinitialize(){if(this.initialized)return;this.lightBuffer.initialize();this.shaders.initialize();this.cameras.initialize();this.textures.initialize();this.atlases.initialize();this.meshes.initialize();this.initialized=true;System.out.println("Initializedscene");}@Overridepublicvoiddestroy(){if(!initialized)return;this.meshes.destroy();this.textures.destroy();this.cameras.destroy();this.shaders.destroy();this.lightBuffer.destroy();this.initialized=false;System.out.println("Cleanedscene");}}

packageio.binarskugga.engine;importjava.util.concurrent.ConcurrentHashMap;publicabstractclassRegistry<T>extendsConcurrentHashMap<String,T>implementsILowLevelResource{@Overridepublicvoidinitialize(){}@Overridepublicvoiddestroy(){}}

packageio.binarskugga.engine;importio.binarskugga.engine.rendering.ShaderProgram;importlombok.AllArgsConstructor;importlombok.Getter;importjava.io.File;importjava.util.HashMap;importjava.util.Map;importjava.util.stream.Stream;importstaticio.binarskugga.Constants.MAX_LIGHTS;@AllArgsConstructorpublicclassShadersextendsRegistry<ShaderProgram>{@GetterprivateStringpath;@Overridepublicvoidinitialize(){Map<String,Object>compileContext=newHashMap<>();compileContext.put("__MAX_LIGHTS__",MAX_LIGHTS);Stream.of(newFile(this.path).listFiles()).forEach(file->{StringshaderName=file.getName().substring(0,file.getName().lastIndexOf('.'));if(this.containsKey(shaderName))return;ShaderProgramprogram=newShaderProgram(this.path,shaderName);program.compile(compileContext);this.put(shaderName,program);});}@Overridepublicvoiddestroy(){this.values().forEach(ShaderProgram::destroy);}}

packageio.binarskugga.engine;importio.binarskugga.engine.rendering.Camera2D;publicclassCamerasextendsRegistry<Camera2D>{}

packageio.binarskugga.engine;importio.binarskugga.engine.rendering.MeshBatch;publicclassMeshBatchesextendsRegistry<MeshBatch>{@Overridepublicvoidinitialize(){this.values().forEach(MeshBatch::initialize);}@Overridepublicvoiddestroy(){this.values().forEach(MeshBatch::destroy);}}

packageio.binarskugga.engine;importio.binarskugga.engine.rendering.Texture;importlombok.AllArgsConstructor;importlombok.Getter;importjava.io.File;importjava.util.stream.Stream;@AllArgsConstructorpublicclassTexturesextendsRegistry<Texture>{@GetterprivateStringpath;@Overridepublicvoidinitialize(){Stream.of(newFile(this.path).listFiles()).forEach(file->{StringtextureName=file.getName().substring(0,file.getName().lastIndexOf('.'));if(this.containsKey(textureName))return;Texturetexture=newTexture(file.getAbsolutePath());this.put(textureName,texture);});}@Overridepublicvoiddestroy(){this.values().forEach(Texture::destroy);}}

packageio.binarskugga.engine;importio.binarskugga.engine.rendering.TextureAtlas;publicclassTextureAtlasesextendsRegistry<TextureAtlas>{privatefinalTexturestextures;publicTextureAtlases(Texturestextures){this.textures=textures;}@Overridepublicvoidinitialize(){this.values().forEach(atlas->{atlas.link(this.textures);});}}

packageio.binarskugga.math;publicinterfaceIVector<TextendsIVector<T>>{}

packageio.binarskugga.math;importstaticio.binarskugga.Constants.LOMONT_FAST_INVSQRT;publicclassStaticMath{privatestaticfinalfloatSIN_COS_TABLE_PRECISION=1000f;privatestaticfinalintSIN_COS_TABLE_LENGTH=360*(int)SIN_COS_TABLE_PRECISION;privatestaticfloat[]sinTable;privatestaticfloat[]cosTable;publicstaticvoidcomputeSinTable(){sinTable=newfloat[SIN_COS_TABLE_LENGTH];for(inti=0;i<SIN_COS_TABLE_LENGTH;i++){sinTable[i]=(float)Math.sin(Math.toRadians(i/SIN_COS_TABLE_PRECISION));}}publicstaticvoidcomputeCosTable(){cosTable=newfloat[SIN_COS_TABLE_LENGTH];for(inti=0;i<SIN_COS_TABLE_LENGTH;i++){cosTable[i]=(float)Math.cos(Math.toRadians(i/SIN_COS_TABLE_PRECISION));}}publicstaticfloatsin(floatangle){angle=Math.abs(angle);returnsinTable[(int)Math.floor((angle*SIN_COS_TABLE_PRECISION))%SIN_COS_TABLE_LENGTH];}publicstaticfloatcos(floatangle){angle=Math.abs(angle);returncosTable[(int)Math.floor((angle*SIN_COS_TABLE_PRECISION)%SIN_COS_TABLE_LENGTH)];}publicstaticbooleanfloatCompare(floata,floatb,floatepsilon){returnMath.abs(a-b)<=epsilon*Math.max(1.0f,Math.max(Math.abs(a),Math.abs(b)));}publicstaticbooleanfloatCompare(floata,floatb){returnfloatCompare(a,b,Float.MIN_VALUE);}publicstaticfloatinvsqrt(floata){floatxhalf=0.5f*a;inti=Float.floatToIntBits(a);i=LOMONT_FAST_INVSQRT-(i>>1);a=Float.intBitsToFloat(i);a*=(1.5f-xhalf*a*a);returna;}publicstaticfloatsqrt(floata){return1.0f/invsqrt(a);}publicstaticdoubleinvsqrt(doublea){doublexhalf=0.5*a;longi=Double.doubleToLongBits(a);i=LOMONT_FAST_INVSQRT-(i>>1);a=Double.longBitsToDouble(i);a*=(1.5-xhalf*a*a);returna;}publicstaticdoublesqrt(doublea){return1.0/invsqrt(a);}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec2fimplementsIVector<Vec2f>{publicfloatx;publicfloaty;publicVec2f(floatw){this.x=w;this.y=w;}publicVec2fset(floatx,floaty){this.x=x;this.y=y;returnthis;}publicVec2fset(floatw){this.x=w;this.y=w;returnthis;}publicVec2fset(@NonNullVec2fother){this.x=other.x;this.y=other.y;returnthis;}@Contract(pure=true)publicfloat[]toArray(){returnnewfloat[]{this.x,this.y};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+"]";}publicVec2fzero(){this.x=0;this.y=0;returnthis;}@Contract(pure=true)@NonNullpublicVec2fnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec2fadd(floatx,floaty){returnnewVec2f(this.x+x,this.y+y);}@Contract(pure=true)@NonNullpublicVec2fadd(floatw){returnnewVec2f(this.x+w,this.y+w);}@Contract(pure=true)@NonNullpublicVec2fadd(@NonNullVec2fother){returnnewVec2f(x+other.x,y+other.y);}@Contract(pure=true)@NonNullpublicVec2fsub(floatx,floaty){returnnewVec2f(this.x-x,this.y-y);}@Contract(pure=true)@NonNullpublicVec2fsub(floatw){returnnewVec2f(this.x-w,this.y-w);}@Contract(pure=true)@NonNullpublicVec2fsub(@NonNullVec2fother){returnnewVec2f(x-other.x,y-other.y);}@Contract(pure=true)@NonNullpublicVec2fmul(floatx,floaty){returnnewVec2f(this.x*x,this.y*y);}@Contract(pure=true)@NonNullpublicVec2fmul(floatscalar){returnnewVec2f(x*scalar,y*scalar);}@Contract(pure=true)@NonNullpublicVec2fmul(@NonNullVec2fother){returnnewVec2f(x*other.x,y*other.y);}@Contract(pure=true)@NonNullpublicVec2fdiv(floatx,floaty){returnnewVec2f(this.x/x,this.y/y);}@Contract(pure=true)@NonNullpublicVec2fdiv(floatscalar){returnnewVec2f(x/scalar,y/scalar);}@Contract(pure=true)@NonNullpublicVec2fdiv(@NonNullVec2fother){returnnewVec2f(x/other.x,y/other.y);}@Contract(pure=true)publicfloatdot(@NonNullVec2fother){returnx*other.x+y*other.y;}@Contract(pure=true)publicfloatlength(booleansquared){if(squared)returnx*x+y*y;elsereturnsqrt(x*x+y*y);}@Contract(pure=true)publicfloatlength(){returnthis.length(false);}@Contract(pure=true)publicfloatdistance(floatx,floaty,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(floatx,floaty){returnthis.distance(x,y,false);}@Contract(pure=true)publicfloatdistance(@NonNullVec2fother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(@NonNullVec2fother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec2fnormalize(){floatvlength=this.length();returnnewVec2f((this.x/vlength),(this.y/vlength));}@Contract(pure=true)@NonNullpublicVec2flerp(@NonNullVec2fother,floatt){returnnewVec2f((this.x+(other.x-this.x)*t),(this.y+(other.y-this.y)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec3fimplementsIVector<Vec3f>{publicfloatx;publicfloaty;publicfloatz;publicVec3f(floatw){this.x=w;this.y=w;this.z=w;}publicVec3fset(floatx,floaty,floatz){this.x=x;this.y=y;this.z=z;returnthis;}publicVec3fset(floatw){this.x=w;this.y=w;this.z=w;returnthis;}publicVec3fset(@NonNullVec3fother){this.x=other.x;this.y=other.y;this.z=other.z;returnthis;}@Contract(pure=true)publicfloat[]toArray(){returnnewfloat[]{this.x,this.y,this.z};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+"]";}publicVec3fzero(){this.x=0;this.y=0;this.z=0;returnthis;}@Contract(pure=true)@NonNullpublicVec3fnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec3fadd(floatx,floaty,floatz){returnnewVec3f(this.x+x,this.y+y,this.z+z);}@Contract(pure=true)@NonNullpublicVec3fadd(floatw){returnnewVec3f(this.x+w,this.y+w,this.z+w);}@Contract(pure=true)@NonNullpublicVec3fadd(@NonNullVec3fother){returnnewVec3f(x+other.x,y+other.y,z+other.z);}@Contract(pure=true)@NonNullpublicVec3fsub(floatx,floaty,floatz){returnnewVec3f(this.x-x,this.y-y,this.z-z);}@Contract(pure=true)@NonNullpublicVec3fsub(floatw){returnnewVec3f(this.x-w,this.y-w,this.z-w);}@Contract(pure=true)@NonNullpublicVec3fsub(@NonNullVec3fother){returnnewVec3f(x-other.x,y-other.y,z-other.z);}@Contract(pure=true)@NonNullpublicVec3fmul(floatx,floaty,floatz){returnnewVec3f(this.x*x,this.y*y,this.z*z);}@Contract(pure=true)@NonNullpublicVec3fmul(floatscalar){returnnewVec3f(x*scalar,y*scalar,z*scalar);}@Contract(pure=true)@NonNullpublicVec3fmul(@NonNullVec3fother){returnnewVec3f(x*other.x,y*other.y,z*other.z);}@Contract(pure=true)@NonNullpublicVec3fdiv(floatx,floaty,floatz){returnnewVec3f(this.x/x,this.y/y,this.z/z);}@Contract(pure=true)@NonNullpublicVec3fdiv(floatscalar){returnnewVec3f(x/scalar,y/scalar,z/scalar);}@Contract(pure=true)@NonNullpublicVec3fdiv(@NonNullVec3fother){returnnewVec3f(x/other.x,y/other.y,z/other.z);}@Contract(pure=true)publicfloatdot(@NonNullVec3fother){returnx*other.x+y*other.y+z*other.z;}@Contract(pure=true)publicfloatlength(booleansquared){if(squared)returnx*x+y*y+z*z;elsereturnsqrt(x*x+y*y+z*z);}@Contract(pure=true)publicfloatlength(){returnthis.length(false);}@Contract(pure=true)publicfloatdistance(floatx,floaty,floatz,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(floatx,floaty,floatz){returnthis.distance(x,y,z,false);}@Contract(pure=true)publicfloatdistance(@NonNullVec3fother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(@NonNullVec3fother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec3fnormalize(){floatvlength=this.length();returnnewVec3f((this.x/vlength),(this.y/vlength),(this.z/vlength));}@Contract(pure=true)publicVec3fcross(@NonNullVec3fother){returnnewVec3f(this.y*other.z-this.z*other.y,this.z*other.x-this.x*other.z,this.x*other.y-this.y*other.x);}@Contract(pure=true)@NonNullpublicVec3flerp(@NonNullVec3fother,floatt){returnnewVec3f((this.x+(other.x-this.x)*t),(this.y+(other.y-this.y)*t),(this.z+(other.z-this.z)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec4fimplementsIVector<Vec4f>{publicfloatx;publicfloaty;publicfloatz;publicfloatw;publicVec4f(floatw){this.x=w;this.y=w;this.z=w;this.w=w;}publicVec4fset(floatx,floaty,floatz,floatw){this.x=x;this.y=y;this.z=z;this.w=w;returnthis;}publicVec4fset(floatw){this.x=w;this.y=w;this.z=w;this.w=w;returnthis;}publicVec4fset(@NonNullVec4fother){this.x=other.x;this.y=other.y;this.z=other.z;this.w=other.w;returnthis;}@Contract(pure=true)publicfloat[]toArray(){returnnewfloat[]{this.x,this.y,this.z,this.w};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+","+this.w+"]";}publicVec4fzero(){this.x=0;this.y=0;this.z=0;this.w=0;returnthis;}@Contract(pure=true)@NonNullpublicVec4fnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec4fadd(floatx,floaty,floatz,floatw){returnnewVec4f(this.x+x,this.y+y,this.z+z,this.w+w);}@Contract(pure=true)@NonNullpublicVec4fadd(floatw){returnnewVec4f(this.x+w,this.y+w,this.z+w,this.w+w);}@Contract(pure=true)@NonNullpublicVec4fadd(@NonNullVec4fother){returnnewVec4f(x+other.x,y+other.y,z+other.z,w+other.w);}@Contract(pure=true)@NonNullpublicVec4fsub(floatx,floaty,floatz,floatw){returnnewVec4f(this.x-x,this.y-y,this.z-z,this.w-w);}@Contract(pure=true)@NonNullpublicVec4fsub(floatw){returnnewVec4f(this.x-w,this.y-w,this.z-w,this.w-w);}@Contract(pure=true)@NonNullpublicVec4fsub(@NonNullVec4fother){returnnewVec4f(x-other.x,y-other.y,z-other.z,w-other.w);}@Contract(pure=true)@NonNullpublicVec4fmul(floatx,floaty,floatz,floatw){returnnewVec4f(this.x*x,this.y*y,this.z*z,this.w*w);}@Contract(pure=true)@NonNullpublicVec4fmul(floatscalar){returnnewVec4f(x*scalar,y*scalar,z*scalar,w*scalar);}@Contract(pure=true)@NonNullpublicVec4fmul(@NonNullVec4fother){returnnewVec4f(x*other.x,y*other.y,z*other.z,w*other.w);}@Contract(pure=true)@NonNullpublicVec4fdiv(floatx,floaty,floatz,floatw){returnnewVec4f(this.x/x,this.y/y,this.z/z,this.w/w);}@Contract(pure=true)@NonNullpublicVec4fdiv(floatscalar){returnnewVec4f(x/scalar,y/scalar,z/scalar,w/scalar);}@Contract(pure=true)@NonNullpublicVec4fdiv(@NonNullVec4fother){returnnewVec4f(x/other.x,y/other.y,z/other.z,w/other.w);}@Contract(pure=true)publicfloatdot(@NonNullVec4fother){returnx*other.x+y*other.y+z*other.z+w*other.w;}@Contract(pure=true)publicfloatlength(booleansquared){if(squared)returnx*x+y*y+z*z+w*w;elsereturnsqrt(x*x+y*y+z*z+w*w);}@Contract(pure=true)publicfloatlength(){returnthis.length(false);}@Contract(pure=true)publicfloatdistance(floatx,floaty,floatz,floatw,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z))+((this.w-w)*(this.w-w));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(floatx,floaty,floatz,floatw){returnthis.distance(x,y,z,w,false);}@Contract(pure=true)publicfloatdistance(@NonNullVec4fother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z))+((this.w-other.w)*(this.w-other.w));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(@NonNullVec4fother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec4fnormalize(){floatvlength=this.length();returnnewVec4f((this.x/vlength),(this.y/vlength),(this.z/vlength),(this.w/vlength));}@Contract(pure=true)@NonNullpublicVec4flerp(@NonNullVec4fother,floatt){returnnewVec4f((this.x+(other.x-this.x)*t),(this.y+(other.y-this.y)*t),(this.z+(other.z-this.z)*t),(this.w+(other.w-this.w)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec2iimplementsIVector<Vec2i>{publicintx;publicinty;publicVec2i(intw){this.x=w;this.y=w;}publicVec2iset(intx,inty){this.x=x;this.y=y;returnthis;}publicVec2iset(intw){this.x=w;this.y=w;returnthis;}publicVec2iset(@NonNullVec2iother){this.x=other.x;this.y=other.y;returnthis;}@Contract(pure=true)publicint[]toArray(){returnnewint[]{this.x,this.y};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+"]";}publicVec2izero(){this.x=0;this.y=0;returnthis;}@Contract(pure=true)@NonNullpublicVec2inegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec2iadd(intx,inty){returnnewVec2i(this.x+x,this.y+y);}@Contract(pure=true)@NonNullpublicVec2iadd(intw){returnnewVec2i(this.x+w,this.y+w);}@Contract(pure=true)@NonNullpublicVec2iadd(@NonNullVec2iother){returnnewVec2i(x+other.x,y+other.y);}@Contract(pure=true)@NonNullpublicVec2isub(intx,inty){returnnewVec2i(this.x-x,this.y-y);}@Contract(pure=true)@NonNullpublicVec2isub(intw){returnnewVec2i(this.x-w,this.y-w);}@Contract(pure=true)@NonNullpublicVec2isub(@NonNullVec2iother){returnnewVec2i(x-other.x,y-other.y);}@Contract(pure=true)@NonNullpublicVec2imul(intx,inty){returnnewVec2i(this.x*x,this.y*y);}@Contract(pure=true)@NonNullpublicVec2imul(floatscalar){returnnewVec2i((int)(x*scalar),(int)(y*scalar));}@Contract(pure=true)@NonNullpublicVec2imul(@NonNullVec2iother){returnnewVec2i(x*other.x,y*other.y);}@Contract(pure=true)@NonNullpublicVec2idiv(intx,inty){returnnewVec2i(this.x/x,this.y/y);}@Contract(pure=true)@NonNullpublicVec2idiv(floatscalar){returnnewVec2i((int)(x/scalar),(int)(y/scalar));}@Contract(pure=true)@NonNullpublicVec2idiv(@NonNullVec2iother){returnnewVec2i(x/other.x,y/other.y);}@Contract(pure=true)publicintdot(@NonNullVec2iother){returnx*other.x+y*other.y;}@Contract(pure=true)publicfloatlength(booleansquared){if(squared)returnx*x+y*y;elsereturnsqrt(x*x+y*y);}@Contract(pure=true)publicfloatlength(){returnthis.length(false);}@Contract(pure=true)publicfloatdistance(intx,inty,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(intx,inty){returnthis.distance(x,y,false);}@Contract(pure=true)publicfloatdistance(@NonNullVec2iother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(@NonNullVec2iother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec2inormalize(){floatvlength=this.length();returnnewVec2i((int)(this.x/vlength),(int)(this.y/vlength));}@Contract(pure=true)@NonNullpublicVec2ilerp(@NonNullVec2iother,floatt){returnnewVec2i((int)(this.x+(other.x-this.x)*t),(int)(this.y+(other.y-this.y)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec3iimplementsIVector<Vec3i>{publicintx;publicinty;publicintz;publicVec3i(intw){this.x=w;this.y=w;this.z=w;}publicVec3iset(intx,inty,intz){this.x=x;this.y=y;this.z=z;returnthis;}publicVec3iset(intw){this.x=w;this.y=w;this.z=w;returnthis;}publicVec3iset(@NonNullVec3iother){this.x=other.x;this.y=other.y;this.z=other.z;returnthis;}@Contract(pure=true)publicint[]toArray(){returnnewint[]{this.x,this.y,this.z};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+"]";}publicVec3izero(){this.x=0;this.y=0;this.z=0;returnthis;}@Contract(pure=true)@NonNullpublicVec3inegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec3iadd(intx,inty,intz){returnnewVec3i(this.x+x,this.y+y,this.z+z);}@Contract(pure=true)@NonNullpublicVec3iadd(intw){returnnewVec3i(this.x+w,this.y+w,this.z+w);}@Contract(pure=true)@NonNullpublicVec3iadd(@NonNullVec3iother){returnnewVec3i(x+other.x,y+other.y,z+other.z);}@Contract(pure=true)@NonNullpublicVec3isub(intx,inty,intz){returnnewVec3i(this.x-x,this.y-y,this.z-z);}@Contract(pure=true)@NonNullpublicVec3isub(intw){returnnewVec3i(this.x-w,this.y-w,this.z-w);}@Contract(pure=true)@NonNullpublicVec3isub(@NonNullVec3iother){returnnewVec3i(x-other.x,y-other.y,z-other.z);}@Contract(pure=true)@NonNullpublicVec3imul(intx,inty,intz){returnnewVec3i(this.x*x,this.y*y,this.z*z);}@Contract(pure=true)@NonNullpublicVec3imul(floatscalar){returnnewVec3i((int)(x*scalar),(int)(y*scalar),(int)(z*scalar));}@Contract(pure=true)@NonNullpublicVec3imul(@NonNullVec3iother){returnnewVec3i(x*other.x,y*other.y,z*other.z);}@Contract(pure=true)@NonNullpublicVec3idiv(intx,inty,intz){returnnewVec3i(this.x/x,this.y/y,this.z/z);}@Contract(pure=true)@NonNullpublicVec3idiv(floatscalar){returnnewVec3i((int)(x/scalar),(int)(y/scalar),(int)(z/scalar));}@Contract(pure=true)@NonNullpublicVec3idiv(@NonNullVec3iother){returnnewVec3i(x/other.x,y/other.y,z/other.z);}@Contract(pure=true)publicintdot(@NonNullVec3iother){returnx*other.x+y*other.y+z*other.z;}@Contract(pure=true)publicfloatlength(booleansquared){if(squared)returnx*x+y*y+z*z;elsereturnsqrt(x*x+y*y+z*z);}@Contract(pure=true)publicfloatlength(){returnthis.length(false);}@Contract(pure=true)publicfloatdistance(intx,inty,intz,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(intx,inty,intz){returnthis.distance(x,y,z,false);}@Contract(pure=true)publicfloatdistance(@NonNullVec3iother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(@NonNullVec3iother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec3inormalize(){floatvlength=this.length();returnnewVec3i((int)(this.x/vlength),(int)(this.y/vlength),(int)(this.z/vlength));}@Contract(pure=true)publicVec3icross(@NonNullVec3iother){returnnewVec3i(this.y*other.z-this.z*other.y,this.z*other.x-this.x*other.z,this.x*other.y-this.y*other.x);}@Contract(pure=true)@NonNullpublicVec3ilerp(@NonNullVec3iother,floatt){returnnewVec3i((int)(this.x+(other.x-this.x)*t),(int)(this.y+(other.y-this.y)*t),(int)(this.z+(other.z-this.z)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec4iimplementsIVector<Vec4i>{publicintx;publicinty;publicintz;publicintw;publicVec4i(intw){this.x=w;this.y=w;this.z=w;this.w=w;}publicVec4iset(intx,inty,intz,intw){this.x=x;this.y=y;this.z=z;this.w=w;returnthis;}publicVec4iset(intw){this.x=w;this.y=w;this.z=w;this.w=w;returnthis;}publicVec4iset(@NonNullVec4iother){this.x=other.x;this.y=other.y;this.z=other.z;this.w=other.w;returnthis;}@Contract(pure=true)publicint[]toArray(){returnnewint[]{this.x,this.y,this.z,this.w};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+","+this.w+"]";}publicVec4izero(){this.x=0;this.y=0;this.z=0;this.w=0;returnthis;}@Contract(pure=true)@NonNullpublicVec4inegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec4iadd(intx,inty,intz,intw){returnnewVec4i(this.x+x,this.y+y,this.z+z,this.w+w);}@Contract(pure=true)@NonNullpublicVec4iadd(intw){returnnewVec4i(this.x+w,this.y+w,this.z+w,this.w+w);}@Contract(pure=true)@NonNullpublicVec4iadd(@NonNullVec4iother){returnnewVec4i(x+other.x,y+other.y,z+other.z,w+other.w);}@Contract(pure=true)@NonNullpublicVec4isub(intx,inty,intz,intw){returnnewVec4i(this.x-x,this.y-y,this.z-z,this.w-w);}@Contract(pure=true)@NonNullpublicVec4isub(intw){returnnewVec4i(this.x-w,this.y-w,this.z-w,this.w-w);}@Contract(pure=true)@NonNullpublicVec4isub(@NonNullVec4iother){returnnewVec4i(x-other.x,y-other.y,z-other.z,w-other.w);}@Contract(pure=true)@NonNullpublicVec4imul(intx,inty,intz,intw){returnnewVec4i(this.x*x,this.y*y,this.z*z,this.w*w);}@Contract(pure=true)@NonNullpublicVec4imul(floatscalar){returnnewVec4i((int)(x*scalar),(int)(y*scalar),(int)(z*scalar),(int)(w*scalar));}@Contract(pure=true)@NonNullpublicVec4imul(@NonNullVec4iother){returnnewVec4i(x*other.x,y*other.y,z*other.z,w*other.w);}@Contract(pure=true)@NonNullpublicVec4idiv(intx,inty,intz,intw){returnnewVec4i(this.x/x,this.y/y,this.z/z,this.w/w);}@Contract(pure=true)@NonNullpublicVec4idiv(floatscalar){returnnewVec4i((int)(x/scalar),(int)(y/scalar),(int)(z/scalar),(int)(w/scalar));}@Contract(pure=true)@NonNullpublicVec4idiv(@NonNullVec4iother){returnnewVec4i(x/other.x,y/other.y,z/other.z,w/other.w);}@Contract(pure=true)publicintdot(@NonNullVec4iother){returnx*other.x+y*other.y+z*other.z+w*other.w;}@Contract(pure=true)publicfloatlength(booleansquared){if(squared)returnx*x+y*y+z*z+w*w;elsereturnsqrt(x*x+y*y+z*z+w*w);}@Contract(pure=true)publicfloatlength(){returnthis.length(false);}@Contract(pure=true)publicfloatdistance(intx,inty,intz,intw,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z))+((this.w-w)*(this.w-w));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(intx,inty,intz,intw){returnthis.distance(x,y,z,w,false);}@Contract(pure=true)publicfloatdistance(@NonNullVec4iother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z))+((this.w-other.w)*(this.w-other.w));if(!squared)return(float)sqrt(squaredDistance);return(float)squaredDistance;}@Contract(pure=true)publicfloatdistance(@NonNullVec4iother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec4inormalize(){floatvlength=this.length();returnnewVec4i((int)(this.x/vlength),(int)(this.y/vlength),(int)(this.z/vlength),(int)(this.w/vlength));}@Contract(pure=true)@NonNullpublicVec4ilerp(@NonNullVec4iother,floatt){returnnewVec4i((int)(this.x+(other.x-this.x)*t),(int)(this.y+(other.y-this.y)*t),(int)(this.z+(other.z-this.z)*t),(int)(this.w+(other.w-this.w)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec2dimplementsIVector<Vec2d>{publicdoublex;publicdoubley;publicVec2d(doublew){this.x=w;this.y=w;}publicVec2dset(doublex,doubley){this.x=x;this.y=y;returnthis;}publicVec2dset(doublew){this.x=w;this.y=w;returnthis;}publicVec2dset(@NonNullVec2dother){this.x=other.x;this.y=other.y;returnthis;}@Contract(pure=true)publicdouble[]toArray(){returnnewdouble[]{this.x,this.y};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+"]";}publicVec2dzero(){this.x=0;this.y=0;returnthis;}@Contract(pure=true)@NonNullpublicVec2dnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec2dadd(doublex,doubley){returnnewVec2d(this.x+x,this.y+y);}@Contract(pure=true)@NonNullpublicVec2dadd(doublew){returnnewVec2d(this.x+w,this.y+w);}@Contract(pure=true)@NonNullpublicVec2dadd(@NonNullVec2dother){returnnewVec2d(x+other.x,y+other.y);}@Contract(pure=true)@NonNullpublicVec2dsub(doublex,doubley){returnnewVec2d(this.x-x,this.y-y);}@Contract(pure=true)@NonNullpublicVec2dsub(doublew){returnnewVec2d(this.x-w,this.y-w);}@Contract(pure=true)@NonNullpublicVec2dsub(@NonNullVec2dother){returnnewVec2d(x-other.x,y-other.y);}@Contract(pure=true)@NonNullpublicVec2dmul(doublex,doubley){returnnewVec2d(this.x*x,this.y*y);}@Contract(pure=true)@NonNullpublicVec2dmul(floatscalar){returnnewVec2d(x*scalar,y*scalar);}@Contract(pure=true)@NonNullpublicVec2dmul(@NonNullVec2dother){returnnewVec2d(x*other.x,y*other.y);}@Contract(pure=true)@NonNullpublicVec2ddiv(doublex,doubley){returnnewVec2d(this.x/x,this.y/y);}@Contract(pure=true)@NonNullpublicVec2ddiv(floatscalar){returnnewVec2d(x/scalar,y/scalar);}@Contract(pure=true)@NonNullpublicVec2ddiv(@NonNullVec2dother){returnnewVec2d(x/other.x,y/other.y);}@Contract(pure=true)publicdoubledot(@NonNullVec2dother){returnx*other.x+y*other.y;}@Contract(pure=true)publicdoublelength(booleansquared){if(squared)returnx*x+y*y;elsereturnsqrt(x*x+y*y);}@Contract(pure=true)publicdoublelength(){returnthis.length(false);}@Contract(pure=true)publicdoubledistance(doublex,doubley,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(doublex,doubley){returnthis.distance(x,y,false);}@Contract(pure=true)publicdoubledistance(@NonNullVec2dother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(@NonNullVec2dother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec2dnormalize(){doublevlength=this.length();returnnewVec2d((this.x/vlength),(this.y/vlength));}@Contract(pure=true)@NonNullpublicVec2dlerp(@NonNullVec2dother,floatt){returnnewVec2d((this.x+(other.x-this.x)*t),(this.y+(other.y-this.y)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec3dimplementsIVector<Vec3d>{publicdoublex;publicdoubley;publicdoublez;publicVec3d(doublew){this.x=w;this.y=w;this.z=w;}publicVec3dset(doublex,doubley,doublez){this.x=x;this.y=y;this.z=z;returnthis;}publicVec3dset(doublew){this.x=w;this.y=w;this.z=w;returnthis;}publicVec3dset(@NonNullVec3dother){this.x=other.x;this.y=other.y;this.z=other.z;returnthis;}@Contract(pure=true)publicdouble[]toArray(){returnnewdouble[]{this.x,this.y,this.z};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+"]";}publicVec3dzero(){this.x=0;this.y=0;this.z=0;returnthis;}@Contract(pure=true)@NonNullpublicVec3dnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec3dadd(doublex,doubley,doublez){returnnewVec3d(this.x+x,this.y+y,this.z+z);}@Contract(pure=true)@NonNullpublicVec3dadd(doublew){returnnewVec3d(this.x+w,this.y+w,this.z+w);}@Contract(pure=true)@NonNullpublicVec3dadd(@NonNullVec3dother){returnnewVec3d(x+other.x,y+other.y,z+other.z);}@Contract(pure=true)@NonNullpublicVec3dsub(doublex,doubley,doublez){returnnewVec3d(this.x-x,this.y-y,this.z-z);}@Contract(pure=true)@NonNullpublicVec3dsub(doublew){returnnewVec3d(this.x-w,this.y-w,this.z-w);}@Contract(pure=true)@NonNullpublicVec3dsub(@NonNullVec3dother){returnnewVec3d(x-other.x,y-other.y,z-other.z);}@Contract(pure=true)@NonNullpublicVec3dmul(doublex,doubley,doublez){returnnewVec3d(this.x*x,this.y*y,this.z*z);}@Contract(pure=true)@NonNullpublicVec3dmul(floatscalar){returnnewVec3d(x*scalar,y*scalar,z*scalar);}@Contract(pure=true)@NonNullpublicVec3dmul(@NonNullVec3dother){returnnewVec3d(x*other.x,y*other.y,z*other.z);}@Contract(pure=true)@NonNullpublicVec3ddiv(doublex,doubley,doublez){returnnewVec3d(this.x/x,this.y/y,this.z/z);}@Contract(pure=true)@NonNullpublicVec3ddiv(floatscalar){returnnewVec3d(x/scalar,y/scalar,z/scalar);}@Contract(pure=true)@NonNullpublicVec3ddiv(@NonNullVec3dother){returnnewVec3d(x/other.x,y/other.y,z/other.z);}@Contract(pure=true)publicdoubledot(@NonNullVec3dother){returnx*other.x+y*other.y+z*other.z;}@Contract(pure=true)publicdoublelength(booleansquared){if(squared)returnx*x+y*y+z*z;elsereturnsqrt(x*x+y*y+z*z);}@Contract(pure=true)publicdoublelength(){returnthis.length(false);}@Contract(pure=true)publicdoubledistance(doublex,doubley,doublez,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(doublex,doubley,doublez){returnthis.distance(x,y,z,false);}@Contract(pure=true)publicdoubledistance(@NonNullVec3dother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(@NonNullVec3dother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec3dnormalize(){doublevlength=this.length();returnnewVec3d((this.x/vlength),(this.y/vlength),(this.z/vlength));}@Contract(pure=true)publicVec3dcross(@NonNullVec3dother){returnnewVec3d(this.y*other.z-this.z*other.y,this.z*other.x-this.x*other.z,this.x*other.y-this.y*other.x);}@Contract(pure=true)@NonNullpublicVec3dlerp(@NonNullVec3dother,floatt){returnnewVec3d((this.x+(other.x-this.x)*t),(this.y+(other.y-this.y)*t),(this.z+(other.z-this.z)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec4dimplementsIVector<Vec4d>{publicdoublex;publicdoubley;publicdoublez;publicdoublew;publicVec4d(doublew){this.x=w;this.y=w;this.z=w;this.w=w;}publicVec4dset(doublex,doubley,doublez,doublew){this.x=x;this.y=y;this.z=z;this.w=w;returnthis;}publicVec4dset(doublew){this.x=w;this.y=w;this.z=w;this.w=w;returnthis;}publicVec4dset(@NonNullVec4dother){this.x=other.x;this.y=other.y;this.z=other.z;this.w=other.w;returnthis;}@Contract(pure=true)publicdouble[]toArray(){returnnewdouble[]{this.x,this.y,this.z,this.w};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+","+this.w+"]";}publicVec4dzero(){this.x=0;this.y=0;this.z=0;this.w=0;returnthis;}@Contract(pure=true)@NonNullpublicVec4dnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec4dadd(doublex,doubley,doublez,doublew){returnnewVec4d(this.x+x,this.y+y,this.z+z,this.w+w);}@Contract(pure=true)@NonNullpublicVec4dadd(doublew){returnnewVec4d(this.x+w,this.y+w,this.z+w,this.w+w);}@Contract(pure=true)@NonNullpublicVec4dadd(@NonNullVec4dother){returnnewVec4d(x+other.x,y+other.y,z+other.z,w+other.w);}@Contract(pure=true)@NonNullpublicVec4dsub(doublex,doubley,doublez,doublew){returnnewVec4d(this.x-x,this.y-y,this.z-z,this.w-w);}@Contract(pure=true)@NonNullpublicVec4dsub(doublew){returnnewVec4d(this.x-w,this.y-w,this.z-w,this.w-w);}@Contract(pure=true)@NonNullpublicVec4dsub(@NonNullVec4dother){returnnewVec4d(x-other.x,y-other.y,z-other.z,w-other.w);}@Contract(pure=true)@NonNullpublicVec4dmul(doublex,doubley,doublez,doublew){returnnewVec4d(this.x*x,this.y*y,this.z*z,this.w*w);}@Contract(pure=true)@NonNullpublicVec4dmul(floatscalar){returnnewVec4d(x*scalar,y*scalar,z*scalar,w*scalar);}@Contract(pure=true)@NonNullpublicVec4dmul(@NonNullVec4dother){returnnewVec4d(x*other.x,y*other.y,z*other.z,w*other.w);}@Contract(pure=true)@NonNullpublicVec4ddiv(doublex,doubley,doublez,doublew){returnnewVec4d(this.x/x,this.y/y,this.z/z,this.w/w);}@Contract(pure=true)@NonNullpublicVec4ddiv(floatscalar){returnnewVec4d(x/scalar,y/scalar,z/scalar,w/scalar);}@Contract(pure=true)@NonNullpublicVec4ddiv(@NonNullVec4dother){returnnewVec4d(x/other.x,y/other.y,z/other.z,w/other.w);}@Contract(pure=true)publicdoubledot(@NonNullVec4dother){returnx*other.x+y*other.y+z*other.z+w*other.w;}@Contract(pure=true)publicdoublelength(booleansquared){if(squared)returnx*x+y*y+z*z+w*w;elsereturnsqrt(x*x+y*y+z*z+w*w);}@Contract(pure=true)publicdoublelength(){returnthis.length(false);}@Contract(pure=true)publicdoubledistance(doublex,doubley,doublez,doublew,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z))+((this.w-w)*(this.w-w));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(doublex,doubley,doublez,doublew){returnthis.distance(x,y,z,w,false);}@Contract(pure=true)publicdoubledistance(@NonNullVec4dother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z))+((this.w-other.w)*(this.w-other.w));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(@NonNullVec4dother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec4dnormalize(){doublevlength=this.length();returnnewVec4d((this.x/vlength),(this.y/vlength),(this.z/vlength),(this.w/vlength));}@Contract(pure=true)@NonNullpublicVec4dlerp(@NonNullVec4dother,floatt){returnnewVec4d((this.x+(other.x-this.x)*t),(this.y+(other.y-this.y)*t),(this.z+(other.z-this.z)*t),(this.w+(other.w-this.w)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec2limplementsIVector<Vec2l>{publiclongx;publiclongy;publicVec2l(longw){this.x=w;this.y=w;}publicVec2lset(longx,longy){this.x=x;this.y=y;returnthis;}publicVec2lset(longw){this.x=w;this.y=w;returnthis;}publicVec2lset(@NonNullVec2lother){this.x=other.x;this.y=other.y;returnthis;}@Contract(pure=true)publiclong[]toArray(){returnnewlong[]{this.x,this.y};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+"]";}publicVec2lzero(){this.x=0;this.y=0;returnthis;}@Contract(pure=true)@NonNullpublicVec2lnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec2ladd(longx,longy){returnnewVec2l(this.x+x,this.y+y);}@Contract(pure=true)@NonNullpublicVec2ladd(longw){returnnewVec2l(this.x+w,this.y+w);}@Contract(pure=true)@NonNullpublicVec2ladd(@NonNullVec2lother){returnnewVec2l(x+other.x,y+other.y);}@Contract(pure=true)@NonNullpublicVec2lsub(longx,longy){returnnewVec2l(this.x-x,this.y-y);}@Contract(pure=true)@NonNullpublicVec2lsub(longw){returnnewVec2l(this.x-w,this.y-w);}@Contract(pure=true)@NonNullpublicVec2lsub(@NonNullVec2lother){returnnewVec2l(x-other.x,y-other.y);}@Contract(pure=true)@NonNullpublicVec2lmul(longx,longy){returnnewVec2l(this.x*x,this.y*y);}@Contract(pure=true)@NonNullpublicVec2lmul(floatscalar){returnnewVec2l((long)(x*scalar),(long)(y*scalar));}@Contract(pure=true)@NonNullpublicVec2lmul(@NonNullVec2lother){returnnewVec2l(x*other.x,y*other.y);}@Contract(pure=true)@NonNullpublicVec2ldiv(longx,longy){returnnewVec2l(this.x/x,this.y/y);}@Contract(pure=true)@NonNullpublicVec2ldiv(floatscalar){returnnewVec2l((long)(x/scalar),(long)(y/scalar));}@Contract(pure=true)@NonNullpublicVec2ldiv(@NonNullVec2lother){returnnewVec2l(x/other.x,y/other.y);}@Contract(pure=true)publiclongdot(@NonNullVec2lother){returnx*other.x+y*other.y;}@Contract(pure=true)publicdoublelength(booleansquared){if(squared)returnx*x+y*y;elsereturnsqrt(x*x+y*y);}@Contract(pure=true)publicdoublelength(){returnthis.length(false);}@Contract(pure=true)publicdoubledistance(longx,longy,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(longx,longy){returnthis.distance(x,y,false);}@Contract(pure=true)publicdoubledistance(@NonNullVec2lother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(@NonNullVec2lother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec2lnormalize(){doublevlength=this.length();returnnewVec2l((long)(this.x/vlength),(long)(this.y/vlength));}@Contract(pure=true)@NonNullpublicVec2llerp(@NonNullVec2lother,floatt){returnnewVec2l((long)(this.x+(other.x-this.x)*t),(long)(this.y+(other.y-this.y)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec3limplementsIVector<Vec3l>{publiclongx;publiclongy;publiclongz;publicVec3l(longw){this.x=w;this.y=w;this.z=w;}publicVec3lset(longx,longy,longz){this.x=x;this.y=y;this.z=z;returnthis;}publicVec3lset(longw){this.x=w;this.y=w;this.z=w;returnthis;}publicVec3lset(@NonNullVec3lother){this.x=other.x;this.y=other.y;this.z=other.z;returnthis;}@Contract(pure=true)publiclong[]toArray(){returnnewlong[]{this.x,this.y,this.z};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+"]";}publicVec3lzero(){this.x=0;this.y=0;this.z=0;returnthis;}@Contract(pure=true)@NonNullpublicVec3lnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec3ladd(longx,longy,longz){returnnewVec3l(this.x+x,this.y+y,this.z+z);}@Contract(pure=true)@NonNullpublicVec3ladd(longw){returnnewVec3l(this.x+w,this.y+w,this.z+w);}@Contract(pure=true)@NonNullpublicVec3ladd(@NonNullVec3lother){returnnewVec3l(x+other.x,y+other.y,z+other.z);}@Contract(pure=true)@NonNullpublicVec3lsub(longx,longy,longz){returnnewVec3l(this.x-x,this.y-y,this.z-z);}@Contract(pure=true)@NonNullpublicVec3lsub(longw){returnnewVec3l(this.x-w,this.y-w,this.z-w);}@Contract(pure=true)@NonNullpublicVec3lsub(@NonNullVec3lother){returnnewVec3l(x-other.x,y-other.y,z-other.z);}@Contract(pure=true)@NonNullpublicVec3lmul(longx,longy,longz){returnnewVec3l(this.x*x,this.y*y,this.z*z);}@Contract(pure=true)@NonNullpublicVec3lmul(floatscalar){returnnewVec3l((long)(x*scalar),(long)(y*scalar),(long)(z*scalar));}@Contract(pure=true)@NonNullpublicVec3lmul(@NonNullVec3lother){returnnewVec3l(x*other.x,y*other.y,z*other.z);}@Contract(pure=true)@NonNullpublicVec3ldiv(longx,longy,longz){returnnewVec3l(this.x/x,this.y/y,this.z/z);}@Contract(pure=true)@NonNullpublicVec3ldiv(floatscalar){returnnewVec3l((long)(x/scalar),(long)(y/scalar),(long)(z/scalar));}@Contract(pure=true)@NonNullpublicVec3ldiv(@NonNullVec3lother){returnnewVec3l(x/other.x,y/other.y,z/other.z);}@Contract(pure=true)publiclongdot(@NonNullVec3lother){returnx*other.x+y*other.y+z*other.z;}@Contract(pure=true)publicdoublelength(booleansquared){if(squared)returnx*x+y*y+z*z;elsereturnsqrt(x*x+y*y+z*z);}@Contract(pure=true)publicdoublelength(){returnthis.length(false);}@Contract(pure=true)publicdoubledistance(longx,longy,longz,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(longx,longy,longz){returnthis.distance(x,y,z,false);}@Contract(pure=true)publicdoubledistance(@NonNullVec3lother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(@NonNullVec3lother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec3lnormalize(){doublevlength=this.length();returnnewVec3l((long)(this.x/vlength),(long)(this.y/vlength),(long)(this.z/vlength));}@Contract(pure=true)publicVec3lcross(@NonNullVec3lother){returnnewVec3l(this.y*other.z-this.z*other.y,this.z*other.x-this.x*other.z,this.x*other.y-this.y*other.x);}@Contract(pure=true)@NonNullpublicVec3llerp(@NonNullVec3lother,floatt){returnnewVec3l((long)(this.x+(other.x-this.x)*t),(long)(this.y+(other.y-this.y)*t),(long)(this.z+(other.z-this.z)*t));}}

packageio.binarskugga.math;importstaticio.binarskugga.math.StaticMath.sqrt;importjava.lang.String;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;importlombok.NonNull;importlombok.Setter;importorg.jetbrains.annotations.Contract;@Getter@Setter@NoArgsConstructor@AllArgsConstructorpublicfinalclassVec4limplementsIVector<Vec4l>{publiclongx;publiclongy;publiclongz;publiclongw;publicVec4l(longw){this.x=w;this.y=w;this.z=w;this.w=w;}publicVec4lset(longx,longy,longz,longw){this.x=x;this.y=y;this.z=z;this.w=w;returnthis;}publicVec4lset(longw){this.x=w;this.y=w;this.z=w;this.w=w;returnthis;}publicVec4lset(@NonNullVec4lother){this.x=other.x;this.y=other.y;this.z=other.z;this.w=other.w;returnthis;}@Contract(pure=true)publiclong[]toArray(){returnnewlong[]{this.x,this.y,this.z,this.w};}@Contract(pure=true)publicStringtoString(){return"["+this.x+","+this.y+","+this.z+","+this.w+"]";}publicVec4lzero(){this.x=0;this.y=0;this.z=0;this.w=0;returnthis;}@Contract(pure=true)@NonNullpublicVec4lnegate(){returnthis.mul(-1);}@Contract(pure=true)@NonNullpublicVec4ladd(longx,longy,longz,longw){returnnewVec4l(this.x+x,this.y+y,this.z+z,this.w+w);}@Contract(pure=true)@NonNullpublicVec4ladd(longw){returnnewVec4l(this.x+w,this.y+w,this.z+w,this.w+w);}@Contract(pure=true)@NonNullpublicVec4ladd(@NonNullVec4lother){returnnewVec4l(x+other.x,y+other.y,z+other.z,w+other.w);}@Contract(pure=true)@NonNullpublicVec4lsub(longx,longy,longz,longw){returnnewVec4l(this.x-x,this.y-y,this.z-z,this.w-w);}@Contract(pure=true)@NonNullpublicVec4lsub(longw){returnnewVec4l(this.x-w,this.y-w,this.z-w,this.w-w);}@Contract(pure=true)@NonNullpublicVec4lsub(@NonNullVec4lother){returnnewVec4l(x-other.x,y-other.y,z-other.z,w-other.w);}@Contract(pure=true)@NonNullpublicVec4lmul(longx,longy,longz,longw){returnnewVec4l(this.x*x,this.y*y,this.z*z,this.w*w);}@Contract(pure=true)@NonNullpublicVec4lmul(floatscalar){returnnewVec4l((long)(x*scalar),(long)(y*scalar),(long)(z*scalar),(long)(w*scalar));}@Contract(pure=true)@NonNullpublicVec4lmul(@NonNullVec4lother){returnnewVec4l(x*other.x,y*other.y,z*other.z,w*other.w);}@Contract(pure=true)@NonNullpublicVec4ldiv(longx,longy,longz,longw){returnnewVec4l(this.x/x,this.y/y,this.z/z,this.w/w);}@Contract(pure=true)@NonNullpublicVec4ldiv(floatscalar){returnnewVec4l((long)(x/scalar),(long)(y/scalar),(long)(z/scalar),(long)(w/scalar));}@Contract(pure=true)@NonNullpublicVec4ldiv(@NonNullVec4lother){returnnewVec4l(x/other.x,y/other.y,z/other.z,w/other.w);}@Contract(pure=true)publiclongdot(@NonNullVec4lother){returnx*other.x+y*other.y+z*other.z+w*other.w;}@Contract(pure=true)publicdoublelength(booleansquared){if(squared)returnx*x+y*y+z*z+w*w;elsereturnsqrt(x*x+y*y+z*z+w*w);}@Contract(pure=true)publicdoublelength(){returnthis.length(false);}@Contract(pure=true)publicdoubledistance(longx,longy,longz,longw,booleansquared){doublesquaredDistance=((this.x-x)*(this.x-x))+((this.y-y)*(this.y-y))+((this.z-z)*(this.z-z))+((this.w-w)*(this.w-w));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(longx,longy,longz,longw){returnthis.distance(x,y,z,w,false);}@Contract(pure=true)publicdoubledistance(@NonNullVec4lother,booleansquared){doublesquaredDistance=((this.x-other.x)*(this.x-other.x))+((this.y-other.y)*(this.y-other.y))+((this.z-other.z)*(this.z-other.z))+((this.w-other.w)*(this.w-other.w));if(!squared)returnsqrt(squaredDistance);returnsquaredDistance;}@Contract(pure=true)publicdoubledistance(@NonNullVec4lother){returnthis.distance(other,false);}@NonNull@Contract(pure=true)publicVec4lnormalize(){doublevlength=this.length();returnnewVec4l((long)(this.x/vlength),(long)(this.y/vlength),(long)(this.z/vlength),(long)(this.w/vlength));}@Contract(pure=true)@NonNullpublicVec4llerp(@NonNullVec4lother,floatt){returnnewVec4l((long)(this.x+(other.x-this.x)*t),(long)(this.y+(other.y-this.y)*t),(long)(this.z+(other.z-this.z)*t),(long)(this.w+(other.w-this.w)*t));}}

packageio.binarskugga.math;importlombok.Getter;importstaticio.binarskugga.math.StaticMath.cos;importstaticio.binarskugga.math.StaticMath.sin;publicclassMat4f{@Getterprivatefloatm00,m01,m02,m03;@Getterprivatefloatm10,m11,m12,m13;@Getterprivatefloatm20,m21,m22,m23;@Getterprivatefloatm30,m31,m32,m33;publicMat4f(){this.identity();}publicMat4fidentity(){this.m00=1.0f;this.m01=0.0f;this.m02=0.0f;this.m03=0.0f;this.m10=0.0f;this.m11=1.0f;this.m12=0.0f;this.m13=0.0f;this.m20=0.0f;this.m21=0.0f;this.m22=1.0f;this.m23=0.0f;this.m30=0.0f;this.m31=0.0f;this.m32=0.0f;this.m33=1.0f;returnthis;}publicMat4ftranslate(floatx,floaty,floatz){floatn03=this.m00*x+this.m01*y+this.m02*z+this.m03;floatn13=this.m10*x+this.m11*y+this.m12*z+this.m13;floatn23=this.m20*x+this.m21*y+this.m22*z+this.m23;floatn33=this.m30*x+this.m31*y+this.m32*z+this.m33;this.m03=n03;this.m13=n13;this.m23=n23;this.m33=n33;returnthis;}publicMat4ftranslate(Vec2ftranslation){returnthis.translate(translation.x,translation.y,0.0f);}publicMat4ftranslate(Vec3ftranslation){returnthis.translate(translation.x,translation.y,translation.z);}publicMat4fscale(floatx,floaty,floatz){this.m00*=x;this.m01*=y;this.m02*=z;this.m10*=x;this.m11*=y;this.m12*=z;this.m20*=x;this.m21*=y;this.m22*=z;this.m30*=x;this.m31*=y;this.m32*=z;returnthis;}publicMat4fscale(Vec2fscalar){returnthis.scale(scalar.x,scalar.y,1.0f);}publicMat4fscale(Vec3fscalar){returnthis.scale(scalar.x,scalar.y,scalar.z);}publicMat4frotateZ(floatangle){floatcos=cos(angle);floatsin=sin(angle);floatn00=this.m00*cos+this.m01*sin;floatn01=this.m00*-sin+this.m01*cos;floatn10=this.m10*cos+this.m11*sin;floatn11=this.m10*-sin+this.m11*cos;floatn20=this.m20*cos+this.m21*sin;floatn21=this.m20*-sin+this.m21*cos;floatn30=this.m30*cos+this.m31*sin;floatn31=this.m30*-sin+this.m31*cos;this.m00=n00;this.m01=n01;this.m10=n10;this.m11=n11;this.m20=n20;this.m21=n21;this.m30=n30;this.m31=n31;returnthis;}publicMat4fmul(Mat4fother){floatn00=this.m00*other.m00+this.m01*other.m10+this.m02*other.m20+this.m03*other.m30;floatn01=this.m00*other.m01+this.m01*other.m11+this.m02*other.m21+this.m03*other.m31;floatn02=this.m00*other.m02+this.m01*other.m12+this.m02*other.m22+this.m03*other.m32;floatn03=this.m00*other.m03+this.m01*other.m13+this.m02*other.m23+this.m03*other.m33;floatn10=this.m10*other.m00+this.m11*other.m10+this.m12*other.m20+this.m13*other.m30;floatn11=this.m10*other.m01+this.m11*other.m11+this.m12*other.m21+this.m13*other.m31;floatn12=this.m10*other.m02+this.m11*other.m12+this.m12*other.m22+this.m13*other.m32;floatn13=this.m10*other.m03+this.m11*other.m13+this.m12*other.m23+this.m13*other.m33;floatn20=this.m20*other.m00+this.m21*other.m10+this.m22*other.m20+this.m23*other.m30;floatn21=this.m20*other.m01+this.m21*other.m11+this.m22*other.m21+this.m23*other.m31;floatn22=this.m20*other.m02+this.m21*other.m12+this.m22*other.m22+this.m23*other.m32;floatn23=this.m20*other.m03+this.m21*other.m13+this.m22*other.m23+this.m23*other.m33;floatn30=this.m30*other.m00+this.m31*other.m10+this.m32*other.m20+this.m33*other.m30;floatn31=this.m30*other.m01+this.m31*other.m11+this.m32*other.m21+this.m33*other.m31;floatn32=this.m30*other.m02+this.m31*other.m12+this.m32*other.m22+this.m33*other.m32;floatn33=this.m30*other.m03+this.m31*other.m13+this.m32*other.m23+this.m33*other.m33;this.m00=n00;this.m01=n01;this.m02=n02;this.m03=n03;this.m10=n10;this.m11=n11;this.m12=n12;this.m13=n13;this.m20=n20;this.m21=n21;this.m22=n22;this.m23=n23;this.m30=n30;this.m31=n31;this.m32=n32;this.m33=n33;returnthis;}publicVec2ftransform(floatx,floaty){floatz=0.0f;floatw=1.0f;floattx=this.m00*x+this.m01*y+this.m02*z+this.m03*w;floatty=this.m10*x+this.m11*y+this.m12*z+this.m13*w;returnnewVec2f(tx,ty);}publicVec2ftransform(Vec2fpoint){returnthis.transform(point.x,point.y);}publicVec3ftransform(floatx,floaty,floatz){floatw=1.0f;floattx=this.m00*x+this.m01*y+this.m02*z+this.m03*w;floatty=this.m10*x+this.m11*y+this.m12*z+this.m13*w;floattz=this.m20*x+this.m21*y+this.m22*z+this.m23*w;returnnewVec3f(tx,ty,tz);}publicVec3ftransform(Vec3fpoint){returnthis.transform(point.x,point.y,point.z);}publicMat4fortho(floatleft,floatright,floatbottom,floattop,floatzNear,floatzFar){floattx=-(right+left)/(right-left);floatty=-(top+bottom)/(top-bottom);floattz=-(zFar+zNear)/(zFar-zNear);this.m00=2.0f/(right-left);this.m01=0.0f;this.m02=0.0f;this.m03=tx;this.m10=0.0f;this.m11=2.0f/(top-bottom);this.m12=0.0f;this.m13=ty;this.m20=0.0f;this.m21=0.0f;this.m22=-2.0f/(zFar-zNear);this.m23=tz;this.m30=0.0f;this.m31=0.0f;this.m32=0.0f;this.m33=1.0f;returnthis;}publicfloat[]toArray(){returnnewfloat[]{this.m00,this.m10,this.m20,this.m30,//Column0this.m01,this.m11,this.m21,this.m31,//Column1this.m02,this.m12,this.m22,this.m32,//Column2this.m03,this.m13,this.m23,this.m33//Column3};}}

packageio.binarskugga.event;importnet.engio.mbassy.bus.MBassador;importnet.engio.mbassy.bus.config.BusConfiguration;importnet.engio.mbassy.bus.config.Feature;importnet.engio.mbassy.bus.config.IBusConfiguration;importnet.engio.mbassy.bus.error.IPublicationErrorHandler;publicclassEventBus{publicstaticfinalEventBusglobal=newEventBus();privatefinalMBassador<Object>bus;privateEventBus(){IBusConfigurationbusConfiguration=newBusConfiguration().addFeature(Feature.SyncPubSub.Default()).addFeature(Feature.AsynchronousHandlerInvocation.Default()).addFeature(Feature.AsynchronousMessageDispatch.Default()).addPublicationErrorHandler(newIPublicationErrorHandler.ConsoleLogger());this.bus=newMBassador<>(busConfiguration);}public<TextendsIEvent>voidpublish(Tevent){this.bus.post(event).now();}public<TextendsISubscriber>voidsubscribe(Tsubscriber){this.bus.subscribe(subscriber);}public<TextendsISubscriber>voidunsubscribe(Tsubscriber){this.bus.unsubscribe(subscriber);}}

packageio.binarskugga.event;publicinterfaceIEvent{}

packageio.binarskugga.event;publicinterfaceISubscriber{}

packageio.binarskugga.dynamic;importcom.squareup.javapoet.*;importlombok.*;importorg.jetbrains.annotations.Contract;importjavax.lang.model.element.Modifier;importjava.io.IOException;importjava.nio.file.Paths;importjava.util.ArrayList;importjava.util.Arrays;importjava.util.List;importjava.util.stream.Collectors;finalclassVectorGenerator{publicstaticvoidmain(String[]args)throwsIOException{TypeName[]types={TypeName.FLOAT,TypeName.INT,TypeName.DOUBLE,TypeName.LONG};int[]dimensions={2,3,4};StringpackageName="io.binarskugga.math";for(TypeNametypeName:types){Stringtype=typeName.toString();Stringsuffix=type.charAt(0)+"";booleanisFloatOrDouble=type.equals("float")||type.equals("double");System.out.println(packageName+"."+typeName+"."+suffix+"."+isFloatOrDouble);for(intdimension:dimensions){StringclassName="Vec"+dimension+suffix;StringfieldsStr="x,y";if(dimension==3)fieldsStr+=",z";if(dimension==4)fieldsStr+=",z,w";String[]fields=fieldsStr.split(",");ClassNamefullClass=ClassName.get(packageName,className);ClassNamefullInterface=ClassName.get(packageName,"IVector");ParameterSpecnotNullOther=ParameterSpec.builder(fullClass,"other").addAnnotation(NonNull.class).build();AnnotationSpecpure=AnnotationSpec.builder(Contract.class).addMember("pure","$L",true).build();StringnonIntCast=typeName==TypeName.FLOAT||typeName==TypeName.DOUBLE?"":"("+typeName+")";TypeNamescalarReturn=typeName==TypeName.DOUBLE||typeName==TypeName.LONG?TypeName.DOUBLE:TypeName.FLOAT;StringfloatConvert=scalarReturn==TypeName.FLOAT?"(float)":"";TypeSpec.BuilderclassBuilder=TypeSpec.classBuilder(className).addModifiers(Modifier.PUBLIC,Modifier.FINAL).addSuperinterface(ParameterizedTypeName.get(fullInterface,fullClass)).addAnnotation(Getter.class).addAnnotation(Setter.class).addAnnotation(NoArgsConstructor.class).addAnnotation(AllArgsConstructor.class);//Fieldsfor(Stringfield:fields){classBuilder.addField(typeName,field,Modifier.PUBLIC);}//FieldsasparamsList<ParameterSpec>parameterSpecs=Arrays.stream(fields).map(field->ParameterSpec.builder(typeName,field).build()).collect(Collectors.toList());ParameterSpecsingleParam=ParameterSpec.builder(typeName,"w").build();//ConstructorMethodSpecconstructor=MethodSpec.constructorBuilder().addModifiers(Modifier.PUBLIC).addParameter(singleParam).addCode(Arrays.stream(fields).map(f->"this."+f+"="+singleParam.name+";").collect(Collectors.joining("\n"))).build();classBuilder.addMethod(constructor);//Set(deconstructed)MethodSpecsetDec=MethodSpec.methodBuilder("set").addModifiers(Modifier.PUBLIC).returns(fullClass).addParameters(parameterSpecs).addCode(Arrays.stream(fields).map(f->"this."+f+"="+f+";").collect(Collectors.joining("\n"))).addCode("\nreturnthis;").build();classBuilder.addMethod(setDec);//Set(single)MethodSpecsetSingle=MethodSpec.methodBuilder("set").addModifiers(Modifier.PUBLIC).returns(fullClass).addParameter(singleParam).addCode(Arrays.stream(fields).map(f->"this."+f+"="+singleParam.name+";").collect(Collectors.joining("\n"))).addCode("\nreturnthis;").build();classBuilder.addMethod(setSingle);//Set(other)MethodSpecsetOther=MethodSpec.methodBuilder("set").addModifiers(Modifier.PUBLIC).returns(fullClass).addParameter(notNullOther).addCode(Arrays.stream(fields).map(f->"this."+f+"=other."+f+";").collect(Collectors.joining("\n"))).addCode("\nreturnthis;").build();classBuilder.addMethod(setOther);//toArrayMethodSpectoArray=MethodSpec.methodBuilder("toArray").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(ArrayTypeName.of(typeName)).addCode("returnnew"+typeName+"[]{"+Arrays.stream(fields).map(f->"this."+f).collect(Collectors.joining(","))+"};",ArrayTypeName.of(typeName)).build();classBuilder.addMethod(toArray);//toStringMethodSpectoString=MethodSpec.methodBuilder("toString").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(String.class).addCode("return\"[\"+"+Arrays.stream(fields).map(f->"this."+f).collect(Collectors.joining("+\",\"+"))+"+\"]\";").build();classBuilder.addMethod(toString);//ZeroMethodSpeczero=MethodSpec.methodBuilder("zero").addModifiers(Modifier.PUBLIC).returns(fullClass).addCode(Arrays.stream(fields).map(f->"this."+f+"=0;").collect(Collectors.joining("\n"))).addCode("\nreturnthis;").build();classBuilder.addMethod(zero);//NegateMethodSpecnegate=MethodSpec.methodBuilder("negate").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addCode("returnthis.mul(-1);",fullClass).build();classBuilder.addMethod(negate);//Add(deconstructed)MethodSpecaddDec=MethodSpec.methodBuilder("add").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameters(parameterSpecs).addCode("returnnew$T("+Arrays.stream(fields).map(f->"this."+f+"+"+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(addDec);//Add(single)MethodSpecaddSingle=MethodSpec.methodBuilder("add").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(singleParam).addCode("returnnew$T("+Arrays.stream(fields).map(f->"this."+f+"+"+singleParam.name).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(addSingle);//Add(other)MethodSpecaddOther=MethodSpec.methodBuilder("add").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(notNullOther).addCode("returnnew$T("+Arrays.stream(fields).map(f->f+"+other."+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(addOther);//Sub(deconstructed)MethodSpecsubDec=MethodSpec.methodBuilder("sub").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameters(parameterSpecs).addCode("returnnew$T("+Arrays.stream(fields).map(f->"this."+f+"-"+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(subDec);//Sub(single)MethodSpecsubSingle=MethodSpec.methodBuilder("sub").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(singleParam).addCode("returnnew$T("+Arrays.stream(fields).map(f->"this."+f+"-"+singleParam.name).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(subSingle);//Sub(other)MethodSpecsubOther=MethodSpec.methodBuilder("sub").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(notNullOther).addCode("returnnew$T("+Arrays.stream(fields).map(f->f+"-other."+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(subOther);//Mul(deconstructed)MethodSpecmulDec=MethodSpec.methodBuilder("mul").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameters(parameterSpecs).addCode("returnnew$T("+Arrays.stream(fields).map(f->"this."+f+"*"+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(mulDec);//Mul(scalar)MethodSpecmul=MethodSpec.methodBuilder("mul").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(TypeName.FLOAT,"scalar").addCode(isFloatOrDouble?"returnnew$T("+Arrays.stream(fields).map(f->f+"*scalar").collect(Collectors.joining(","))+");":"returnnew$T("+Arrays.stream(fields).map(f->"("+type+")("+f+"*scalar)").collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(mul);//Mul(other)MethodSpecmulOther=MethodSpec.methodBuilder("mul").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(notNullOther).addCode("returnnew$T("+Arrays.stream(fields).map(f->f+"*other."+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(mulOther);//Div(deconstructed)MethodSpecdivDec=MethodSpec.methodBuilder("div").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameters(parameterSpecs).addCode("returnnew$T("+Arrays.stream(fields).map(f->"this."+f+"/"+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(divDec);//Div(scalar)MethodSpecdiv=MethodSpec.methodBuilder("div").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(TypeName.FLOAT,"scalar").addCode(isFloatOrDouble?"returnnew$T("+Arrays.stream(fields).map(f->f+"/scalar").collect(Collectors.joining(","))+");":"returnnew$T("+Arrays.stream(fields).map(f->"("+type+")("+f+"/scalar)").collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(div);//Div(other)MethodSpecdivOther=MethodSpec.methodBuilder("div").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(notNullOther).addCode("returnnew$T("+Arrays.stream(fields).map(f->f+"/other."+f).collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(divOther);//DotMethodSpecdot=MethodSpec.methodBuilder("dot").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(typeName).addParameter(notNullOther).addCode("return"+Arrays.stream(fields).map(f->f+"*other."+f).collect(Collectors.joining("+"))+";").build();classBuilder.addMethod(dot);//LengthMethodSpeclength=MethodSpec.methodBuilder("length").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(scalarReturn).addParameter(TypeName.BOOLEAN,"squared").addCode("if(squared)return"+Arrays.stream(fields).map(f->f+"*"+f).collect(Collectors.joining("+"))+";").addCode("\nelsereturnsqrt("+Arrays.stream(fields).map(f->f+"*"+f).collect(Collectors.joining("+"))+");").build();classBuilder.addMethod(length);MethodSpeclengthDefault=MethodSpec.methodBuilder("length").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(scalarReturn).addCode("returnthis.length(false);").build();classBuilder.addMethod(lengthDefault);//Distance(deconstructed)MethodSpecdistanceDec=MethodSpec.methodBuilder("distance").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(scalarReturn).addParameters(parameterSpecs).addParameter(TypeName.BOOLEAN,"squared").addCode("doublesquaredDistance="+Arrays.stream(fields).map(f->"((this."+f+"-"+f+")*(this."+f+"-"+f+"))").collect(Collectors.joining("+"))+";\n").addCode("if(!squared)return"+floatConvert+"sqrt(squaredDistance);\n").addCode("return"+floatConvert+"squaredDistance;\n").build();classBuilder.addMethod(distanceDec);MethodSpecdistanceDecDefault=MethodSpec.methodBuilder("distance").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(scalarReturn).addParameters(parameterSpecs).addCode("returnthis.distance("+String.join(",",fields)+",false);").build();classBuilder.addMethod(distanceDecDefault);//Distance(other)MethodSpecdistanceOther=MethodSpec.methodBuilder("distance").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(scalarReturn).addParameter(notNullOther).addParameter(TypeName.BOOLEAN,"squared").addCode("doublesquaredDistance="+Arrays.stream(fields).map(f->"((this."+f+"-other."+f+")*(this."+f+"-other."+f+"))").collect(Collectors.joining("+"))+";\n").addCode("if(!squared)return"+floatConvert+"sqrt(squaredDistance);\n").addCode("return"+floatConvert+"squaredDistance;\n").build();classBuilder.addMethod(distanceOther);MethodSpecdistanceOtherDefault=MethodSpec.methodBuilder("distance").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(scalarReturn).addParameter(notNullOther).addCode("returnthis.distance(other,false);").build();classBuilder.addMethod(distanceOtherDefault);//NormalizeMethodSpecnormalize=MethodSpec.methodBuilder("normalize").addModifiers(Modifier.PUBLIC).addAnnotation(NonNull.class).addAnnotation(pure).returns(fullClass).addCode(scalarReturn+"vlength=this.length();\n").addCode("returnnew$T("+Arrays.stream(fields).map(f->nonIntCast+"(this."+f+"/vlength)").collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(normalize);if(dimension==3){//Cross(other)MethodSpeccross=MethodSpec.methodBuilder("cross").addModifiers(Modifier.PUBLIC).addAnnotation(pure).returns(fullClass).addParameter(notNullOther).addCode("""returnnew$T(this.y*other.z-this.z*other.y,this.z*other.x-this.x*other.z,this.x*other.y-this.y*other.x);""",fullClass).build();classBuilder.addMethod(cross);}//Lerp(other)MethodSpeclerpOther=MethodSpec.methodBuilder("lerp").addModifiers(Modifier.PUBLIC).addAnnotation(pure).addAnnotation(NonNull.class).returns(fullClass).addParameter(notNullOther).addParameter(TypeName.FLOAT,"t").addCode("returnnew$T("+Arrays.stream(fields).map(f->nonIntCast+"(this."+f+"+(other."+f+"-this."+f+")*t)").collect(Collectors.joining(","))+");",fullClass).build();classBuilder.addMethod(lerpOther);//WritetofileClassNameStaticMath=ClassName.get("io.binarskugga.math","StaticMath");JavaFilejavaFile=JavaFile.builder(packageName,classBuilder.build()).addStaticImport(StaticMath,"sqrt").build();try{javaFile.writeTo(Paths.get("src/main/java"));}catch(IOExceptione){}}}}publicstaticStringinjectImports(@NonNullJavaFilejavaFile,String...imports){StringrawSource=javaFile.toString();List<String>result=newArrayList<>();for(Strings:rawSource.split("\n",-1)){result.add(s);if(s.startsWith("package")){result.add("");for(Stringi:imports){result.add("import"+i+";");}}}returnString.join("\n",result);}}

packageio.binarskugga.content;importio.binarskugga.event.ISubscriber;importlombok.Getter;importlombok.NonNull;importjava.util.List;importjava.util.concurrent.ConcurrentHashMap;importjava.util.concurrent.atomic.AtomicLong;publicclassEntityextendsConcurrentHashMap<Class<?extendsIComponent>,List<IComponent>>implementsISubscriber{privatestaticfinalAtomicLongidProvider=newAtomicLong(0);@Getterprivatefinallongid;@GetterprivatefinalWorldworld;publicEntity(Worldworld){this.id=idProvider.getAndIncrement();this.world=world;}@SuppressWarnings("unchecked")public<TextendsIComponent>List<T>components(Class<T>componentClass){return(List<T>)this.get(componentClass);}@SuppressWarnings("unchecked")public<TextendsIComponent>Tcomponent(Class<T>componentClass){return(T)this.get(componentClass).getFirst();}publicbooleanhasComponent(@NonNullClass<?extendsIComponent>componentClass){List<IComponent>components=this.get(componentClass);returncomponents!=null&&!components.isEmpty();}@SafeVarargspublicfinalbooleanhasComponents(Class<?extendsIComponent>...componentClasses){for(Class<?extendsIComponent>clazz:componentClasses){if(!hasComponent(clazz))returnfalse;}returntrue;}}

packageio.binarskugga.content;importlombok.NonNull;importjava.util.*;importjava.util.concurrent.ConcurrentHashMap;importjava.util.stream.Collectors;publicclassComponentLinkerextendsConcurrentHashMap<Class<?extendsIComponent>,Map<Long,Entity>>{privatefinalMap<Long,BitSet>entitiesComponentsMask=newConcurrentHashMap<>();publicComponentLinker(){}publicComponentLinkeradd(@NonNullEntitye,@NonNullIComponentcomponent){Class<?extendsIComponent>clazz=component.getClass();this.computeIfAbsent(clazz,k->newConcurrentHashMap<>()).put(e.id(),e);e.computeIfAbsent(clazz,k->newArrayList<>()).add(component);entitiesComponentsMask.computeIfAbsent(e.id(),k->newBitSet()).set(component.bitsetIndex());returnthis;}publicComponentLinkerremove(@NonNullEntitye,@NonNullClass<?extendsIComponent>clazz){Map<Long,Entity>entities=this.get(clazz);if(entities==null)returnthis;e.remove(clazz);entities.remove(e.id());BitSetmask=entitiesComponentsMask.get(e.id());mask.clear(BaseComponent.hashcodeMap.get(clazz.hashCode()));if(mask.isEmpty())entitiesComponentsMask.remove(e.id());returnthis;}@SafeVarargspublicfinalList<Entity>entities(@NonNullClass<?extendsIComponent>...classes){if(classes==null||classes.length==0)returnCollections.emptyList();Map<Long,Entity>entities=this.get(classes[0]);if(entities==null)returnCollections.emptyList();BitSetqueryMask=newBitSet();for(Class<?extendsIComponent>clazz:classes){queryMask.set(BaseComponent.hashcodeMap.get(clazz.hashCode()));}Map<Long,Entity>initialEntities=this.get(classes[0]);returninitialEntities.values().stream().filter(entity->{BitSetmask=entitiesComponentsMask.get(entity.id());if(mask==null)returnfalse;BitSettemp=(BitSet)mask.clone();temp.and(queryMask);returntemp.equals(queryMask);}).collect(Collectors.toList());}}

packageio.binarskugga.content;importio.binarskugga.engine.Clock;importio.binarskugga.engine.ILowLevelResource;importio.binarskugga.engine.Scene;publicinterfaceISystem{voidupdate(Clockclock,Scenescene);ISystemcomponents(ComponentLinkercomponents);}

packageio.binarskugga.content;importio.binarskugga.event.EventBus;importio.binarskugga.event.ISubscriber;importlombok.Getter;importlombok.Setter;publicabstractclassBaseSystemimplementsISystem,ISubscriber{@Getter@SetterprivateComponentLinkercomponents;publicBaseSystem(){EventBus.global.subscribe(this);}}

packageio.binarskugga.content;importio.binarskugga.engine.Clock;importio.binarskugga.engine.Scene;importlombok.Getter;importlombok.NonNull;importjava.util.LinkedList;importjava.util.List;publicclassWorld{@GetterprivatefinalList<ISystem>systems;@GetterprivatefinalComponentLinkercomponents;publicWorld(){this.systems=newLinkedList<>();this.components=newComponentLinker();}publicvoidupdate(@NonNullClockclock,Scenescene){this.systems.forEach(system->system.update(clock,scene));}@SafeVarargspublicfinal<TextendsISystem>voidaddSystems(T@NonNull...systems){for(ISystemsystem:systems){this.systems.add(system);system.components(this.components);}}publicWorldEntityProxycreateEntity(){Entityentity=newEntity(this);returnnewWorldEntityProxy(this,entity);}}

packageio.binarskugga.content;importlombok.AllArgsConstructor;importlombok.Getter;@AllArgsConstructorpublicclassWorldEntityProxy{@GetterWorldworld;@GetterEntityentity;publicWorldEntityProxyadd(IComponentcomponent){this.world.components().add(this.entity,component);returnthis;}}

packageio.binarskugga.content;publicinterfaceIComponent{booleandirty();intbitsetIndex();}

packageio.binarskugga.content;importlombok.Getter;importjava.util.HashMap;importjava.util.concurrent.atomic.AtomicInteger;publicabstractclassBaseComponentimplementsIComponent{privatestaticAtomicIntegerbitsetIndexer=newAtomicInteger(0);publicstaticHashMap<Integer,Integer>hashcodeMap=newHashMap<>();@Getterpublicbooleandirty=false;publicintbitsetIndex(){intcode=this.getClass().hashCode();returnhashcodeMap.computeIfAbsent(code,k->bitsetIndexer.incrementAndGet());}}

packageio.binarskugga.content.components;importio.binarskugga.content.BaseComponent;importio.binarskugga.math.Mat4f;importio.binarskugga.math.Vec2f;importio.binarskugga.math.Vec3f;importlombok.AllArgsConstructor;importlombok.NoArgsConstructor;@AllArgsConstructor@NoArgsConstructorpublicclassTransformComponentextendsBaseComponent{publicVec3fposition=newVec3f(0f,0f,0f);publicVec2fsize=newVec2f(32f,32f);publicfloatrotation=0.0f;publicVec3fpivot=newVec3f(0.5f,0.5f,0.0f);privateMat4ftransformer=newMat4f();publicTransformComponent(Vec3fposition,Vec2fsize){this.position=position;this.size=size;}publicTransformComponent(Vec3fposition,Vec2fsize,floatrotation){this.position=position;this.size=size;this.rotation=rotation;}publicMat4ftransformation(){Vec3fworldPivot=this.pivot.mul(this.size.x,this.size.y,1.0f);returnthis.transformer.identity().translate(this.position).translate(worldPivot).rotateZ(this.rotation).translate(worldPivot.negate()).scale(this.size);}publicVec3ftransform(Vec3fpoint){Vec3ftoTransform=point.div(this.size.x,this.size.y,1.0f);returnthis.transformation().transform(toTransform);}}

packageio.binarskugga.content.components;importio.binarskugga.content.BaseComponent;importio.binarskugga.math.Vec2i;importlombok.AllArgsConstructor;importlombok.NoArgsConstructor;@NoArgsConstructor@AllArgsConstructorpublicclassRenderComponentextendsBaseComponent{publicStringshader;publicStringmesh;publicStringatlas;publicVec2iatlasPosition;}

packageio.binarskugga.content.components;importio.binarskugga.content.BaseComponent;importio.binarskugga.math.Vec2f;importio.binarskugga.math.Vec3f;importlombok.AllArgsConstructor;importlombok.NoArgsConstructor;@NoArgsConstructor@AllArgsConstructorpublicclassLightComponentextendsBaseComponent{publicVec3foffset;publicVec3fcolor;publicfloatintensity;publicfloatconstant=1.0f;publicfloatlinear=0.045f;publicfloatquadratic=0.0075f;publicbooleanisFlickering=false;publicfloatflickerSpeed=1.0f;publicfloatflickerAmplitude=0.03f;publicLightComponent(floatintensity){this.offset=newVec3f();this.color=newVec3f(1.0f,1.0f,1.0f);this.intensity=intensity;}publicLightComponent(Vec3fcolor,floatintensity){this.offset=newVec3f();this.color=color;this.intensity=intensity;}publicLightComponent(Vec3foffset,Vec3fcolor,floatintensity){this.offset=offset;this.color=color;this.intensity=intensity;}publicLightComponent(Vec3foffset,Vec3fcolor,floatintensity,booleanflickering){this.offset=offset;this.color=color;this.intensity=intensity;this.isFlickering=flickering;}}

packageio.binarskugga.content.components;importio.binarskugga.content.BaseComponent;importlombok.AllArgsConstructor;importlombok.NoArgsConstructor;@AllArgsConstructor@NoArgsConstructorpublicclassPlayerComponentextendsBaseComponent{publicfloatspeed;}

packageio.binarskugga.content.components;importio.binarskugga.content.BaseComponent;importlombok.AllArgsConstructor;importlombok.NoArgsConstructor;@AllArgsConstructor@NoArgsConstructorpublicclassAnimationComponentextendsBaseComponent{publicbooleanisYAxis=false;publicbooleanactive=true;publicfloatframeDuration=1/10f;//InsecondspublicfloataccDelta=0.0f;publicintinitialPosition=Integer.MIN_VALUE;publicintframe=0;publicintmaxFrames=16;publicintinitialLine=Integer.MIN_VALUE;publicintline=0;publicAnimationComponent(intmaxFrames){this.maxFrames=maxFrames;}}

packageio.binarskugga.content.components;importio.binarskugga.content.BaseComponent;importio.binarskugga.math.Vec3f;importlombok.AllArgsConstructor;importlombok.NoArgsConstructor;@NoArgsConstructor@AllArgsConstructorpublicclassAmbientLightComponentextendsBaseComponent{publicVec3fcolor=newVec3f(1.0f,1.0f,1.0f);publicfloatintensity=0.3f;}

packageio.binarskugga.content.systems;importio.binarskugga.content.BaseSystem;importio.binarskugga.content.Entity;importio.binarskugga.content.components.RenderComponent;importio.binarskugga.content.components.TransformComponent;importio.binarskugga.engine.Clock;importio.binarskugga.engine.Scene;importio.binarskugga.engine.input.KeyboardButton;importio.binarskugga.engine.rendering.*;importio.binarskugga.event.ISubscriber;importio.binarskugga.event.impl.KeyEvent;importio.binarskugga.event.impl.WindowResizeEvent;importio.binarskugga.math.Mat4f;importio.binarskugga.math.Vec2f;importlombok.NonNull;importnet.engio.mbassy.listener.Handler;importnet.engio.mbassy.listener.Listener;importjava.util.*;importstaticorg.lwjgl.opengl.GL46.*;@ListenerpublicclassRenderSystemextendsBaseSystemimplementsISubscriber{publicMap<String,Map<String,Map<String,List<Entity>>>>organizeEntities(Collection<Entity>entities){Map<String,Map<String,Map<String,List<Entity>>>>organizedEntities=newHashMap<>();entities.forEach(e->{RenderComponentrender=e.component(RenderComponent.class);organizedEntities.computeIfAbsent(render.shader,k->newHashMap<>()).computeIfAbsent(render.atlas,k->newHashMap<>()).computeIfAbsent(render.mesh,k->newArrayList<>()).add(e);});returnorganizedEntities;}publicvoidupdate(Clockclock,@NonNullScenescene){if(!scene.initialized())return;Camera2Dcamera=scene.cameras().get("main");List<Entity>entities=this.components().entities(TransformComponent.class,RenderComponent.class);Map<String,Map<String,Map<String,List<Entity>>>>organizedEntities=organizeEntities(entities);organizedEntities.forEach((shader,atlasOrganized)->{ShaderProgramprogram=scene.shaders().get(shader);program.bind();program.uniform(camera.projection(),"uProjection");if(scene.ambientLight()!=null){program.uniform(scene.ambientLight().color,"uAmbientColor");program.uniform(scene.ambientLight().intensity,"uAmbientIntensity");}if(scene.lights()!=null){program.uniform(scene.lights().size(),"uLightCount");scene.lightBuffer().bind(program);scene.lightBuffer().update(scene.lights());}atlasOrganized.forEach((a,meshOrganized)->{TextureAtlasatlas=scene.atlases().get(a);atlas.texture().bind();Vec2ftextureSize=newVec2f(atlas.texture().width(),atlas.texture().height());Vec2fspriteSize=newVec2f(atlas.spriteWidth(),atlas.spriteHeight());program.uniform(textureSize,"uTextureSize");program.uniform(spriteSize,"uSpriteSize");program.uniform(atlas.padding(),"uTexturePadding");program.uniform(0,"uTexture0");meshOrganized.forEach((m,ents)->{MeshBatchmesh=scene.meshes().get(m);List<Vec2f>atlasPositions=newArrayList<>();List<Mat4f>transforms=newArrayList<>();ents.stream().sorted(Comparator.comparing(ent->ent.component(TransformComponent.class).position.z)).forEach(ent->{TransformComponenttransform=ent.component(TransformComponent.class);RenderComponentrender=ent.component(RenderComponent.class);atlasPositions.add(newVec2f(render.atlasPosition.x,render.atlasPosition.y));transforms.add(transform.transformation());});mesh.update(atlasPositions,transforms);mesh.draw(transforms.size());});});});}@HandlerpublicvoidonWindowResize(@NonNullWindowResizeEventevent){glViewport(0,0,Math.min(event.width,1000),Math.min(event.height,800));}@HandlerpublicvoidonF1(@NonNullKeyEventevent){if(event.key!=KeyboardButton.F1||!event.isReleased())return;intpolyMode=glGetInteger(GL_POLYGON_MODE);if(polyMode==GL_LINE)glPolygonMode(GL_FRONT_AND_BACK,GL_FILL);if(polyMode==GL_FILL)glPolygonMode(GL_FRONT_AND_BACK,GL_LINE);}//@Handler//publicvoidonMouseMove(MouseMoveEventevent){//Camera2Dcamera=scene.cameras().get("main");//Vec2fposition=newVec2f((float)event.x,(float)event.y).div(this.camera.zoom());//this.lights.get(0).position=position;//}}

packageio.binarskugga.content.systems;importio.binarskugga.content.BaseSystem;importio.binarskugga.content.Entity;importio.binarskugga.content.components.AmbientLightComponent;importio.binarskugga.content.components.LightComponent;importio.binarskugga.content.components.TransformComponent;importio.binarskugga.engine.Clock;importio.binarskugga.engine.Scene;importio.binarskugga.engine.light.AmbientLight;importio.binarskugga.engine.light.Light;importio.binarskugga.event.ISubscriber;importio.binarskugga.math.Vec2f;importio.binarskugga.math.Vec3f;importnet.engio.mbassy.listener.Listener;importjava.util.ArrayList;importjava.util.Collection;importjava.util.List;importjava.util.NoSuchElementException;importstaticio.binarskugga.math.StaticMath.sin;@ListenerpublicclassLightSystemextendsBaseSystemimplementsISubscriber{privatefloattime=0.0f;@Overridepublicvoidupdate(Clockclock,Scenescene){floatdelta=clock.delta()/1_000_000f/1000f;time+=delta;Collection<Entity>entities=this.components().entities(TransformComponent.class,LightComponent.class);List<Light>lights=newArrayList<>();for(Entityentity:entities){TransformComponenttransform=entity.component(TransformComponent.class);List<LightComponent>lightComponents=entity.components(LightComponent.class);for(LightComponentl:lightComponents){Vec3flightPosition=transform.transform(l.offset);if(l.isFlickering){floatadjustedFlickerSpeed=l.flickerSpeed/delta;//Thirdandsecondfrequenciesparamarearbitraryfloatfreq1=sin(time*adjustedFlickerSpeed)*l.flickerAmplitude;floatfreq2=sin(time*adjustedFlickerSpeed*1.7f)*l.flickerAmplitude*0.5f;floatfreq3=sin(time*adjustedFlickerSpeed*2.4f)*l.flickerAmplitude*0.2f;floatflicker=freq1+freq2+freq3;l.intensity=Math.max(0.0f,l.intensity+flicker);}lights.add(newLight(lightPosition,l.color,l.intensity,l.constant,l.linear,l.quadratic));}}try{EntityambientLight=this.components().entities(AmbientLightComponent.class).getFirst();AmbientLightComponentcomponent=ambientLight.component(AmbientLightComponent.class);scene.ambientLight(newAmbientLight(component.color,component.intensity));}catch(NoSuchElementExceptione){}scene.lights(lights);}}

packageio.binarskugga.content.systems;importio.binarskugga.content.BaseSystem;importio.binarskugga.content.Entity;importio.binarskugga.content.components.AnimationComponent;importio.binarskugga.content.components.LightComponent;importio.binarskugga.content.components.PlayerComponent;importio.binarskugga.content.components.TransformComponent;importio.binarskugga.engine.Clock;importio.binarskugga.engine.Scene;importio.binarskugga.engine.input.KeyboardButton;importio.binarskugga.event.ISubscriber;importio.binarskugga.event.impl.KeyEvent;importio.binarskugga.math.Vec2f;importio.binarskugga.math.Vec3f;importnet.engio.mbassy.listener.Handler;importnet.engio.mbassy.listener.Listener;importjava.util.List;importjava.util.NoSuchElementException;@ListenerpublicclassControlSystemextendsBaseSystemimplementsISubscriber{privateVec3fmovement=newVec3f(0,0,0);privateintanimationLine=0;privatebooleandash=false;privateEntitymainPlayer=null;privatebooleancameraCentered=false;@Overridepublicvoidupdate(Clockclock,Scenescene){if(this.mainPlayer==null){this.mainPlayer=this.components().entities(TransformComponent.class,PlayerComponent.class).getFirst();}floatdeltaFactor=(float)clock.delta()/1_000_000;if(deltaFactor==0)deltaFactor=1;TransformComponenttransform=this.mainPlayer.component(TransformComponent.class);Vec2fhalfSize=transform.size.div(2f);if(!this.cameraCentered){//Instantlycentersthecamerasothereisnovisualglitchonopeningscene.cameras().get("main").follow(transform.position.add(halfSize.x,halfSize.y,0.0f),1.0f);this.cameraCentered=true;}PlayerComponentplayer=this.mainPlayer.component(PlayerComponent.class);floatadjustedSpeed=player.speed/deltaFactor;if(this.dash){//Verycrudedashtransform.position=transform.position.add(this.movement.normalize().mul(200));this.dash=false;}else{transform.position=transform.position.add(this.movement.normalize().mul(adjustedSpeed));}try{AnimationComponentanimation=this.mainPlayer.component(AnimationComponent.class);animation.line=animationLine;animation.active=movement.x!=0||movement.y!=0;}catch(NoSuchElementExceptione){}scene.cameras().get("main").follow(transform.position.add(halfSize.x,halfSize.y,0.0f),0.02f);movement.set(0.0f);}@HandlerpublicvoidonWASD(KeyEventevent){if(event.key!=KeyboardButton.W&&event.key!=KeyboardButton.A&&event.key!=KeyboardButton.S&&event.key!=KeyboardButton.D){return;}if(event.key==KeyboardButton.W&&event.isDown()){this.movement.y(-1);this.animationLine=3;}elseif(event.key==KeyboardButton.S&&event.isDown()){this.movement.y(1);this.animationLine=0;}if(event.key==KeyboardButton.A&&event.isDown()){this.movement.x(-1);this.animationLine=1;}elseif(event.key==KeyboardButton.D&&event.isDown()){this.movement.x(1);this.animationLine=2;}}@HandlerpublicvoidonSpace(KeyEventevent){if(event.key!=KeyboardButton.SPACE)return;if(event.isPressed()){this.dash=true;}}}

packageio.binarskugga.content.systems;importio.binarskugga.content.BaseSystem;importio.binarskugga.content.Entity;importio.binarskugga.content.components.AnimationComponent;importio.binarskugga.content.components.RenderComponent;importio.binarskugga.engine.Clock;importio.binarskugga.engine.Scene;importnet.engio.mbassy.listener.Listener;importjava.util.List;@ListenerpublicclassAnimationSystemextendsBaseSystem{@Overridepublicvoidupdate(Clockclock,Scenescene){floatdeltaSec=clock.delta()/1_000_000f/1000f;//InsecondsList<Entity>entities=this.components().entities(AnimationComponent.class,RenderComponent.class);for(Entityentity:entities){AnimationComponentanimation=entity.component(AnimationComponent.class);RenderComponentrender=entity.component(RenderComponent.class);if(animation.frame==animation.maxFrames)animation.frame=0;if(!animation.isYAxis){if(animation.initialPosition==Integer.MIN_VALUE)animation.initialPosition=render.atlasPosition.x();if(animation.initialLine==Integer.MIN_VALUE)animation.initialLine=render.atlasPosition.y();}else{if(animation.initialPosition==Integer.MIN_VALUE)animation.initialPosition=render.atlasPosition.y();if(animation.initialLine==Integer.MIN_VALUE)animation.initialLine=render.atlasPosition.x();}if(!animation.active){animation.frame=0;if(!animation.isYAxis){render.atlasPosition.x=animation.initialPosition;render.atlasPosition.y=animation.initialLine+animation.line;}else{render.atlasPosition.x=animation.initialLine+animation.line;render.atlasPosition.y=animation.initialPosition;}continue;}animation.accDelta+=deltaSec;if(animation.accDelta<animation.frameDuration)continue;if(!animation.isYAxis){render.atlasPosition.x=animation.initialPosition+animation.frame;render.atlasPosition.y=animation.initialLine+animation.line;}else{render.atlasPosition.x=animation.initialLine+animation.line;render.atlasPosition.y=animation.initialPosition+animation.frame;}animation.frame+=1;animation.accDelta=0.0f;}}}

packageio.binarskugga.event.impl;importio.binarskugga.event.IEvent;importlombok.AllArgsConstructor;@AllArgsConstructorpublicclassWindowResizeEventimplementsIEvent{publiclongwindow;publicintwidth,height;}

packageio.binarskugga.event.impl;importio.binarskugga.event.IEvent;importlombok.AllArgsConstructor;importjava.util.concurrent.TimeUnit;@AllArgsConstructorpublicclassClockSecondResetEventimplementsIEvent{privatefinallongsecondInNanos=TimeUnit.SECONDS.toNanos(1);privatefinallongmilliInNanos=TimeUnit.MILLISECONDS.toNanos(1);publiclongtime,delta;publicintfps;publicfloatdeltaMS(){returnthis.delta/(float)this.milliInNanos;}publicfloatdeltaS(){returnthis.delta/(float)this.secondInNanos;}}

packageio.binarskugga.event.impl;importio.binarskugga.engine.input.ButtonState;importio.binarskugga.engine.input.KeyboardButton;importio.binarskugga.event.IEvent;importlombok.AllArgsConstructor;importlombok.NoArgsConstructor;@NoArgsConstructor@AllArgsConstructorpublicclassKeyEventimplementsIEvent{publiclongwindow;publicKeyboardButtonkey;publicButtonStatestate;publicintconsecutivePress;publicbooleanisPressed(){returnthis.state==ButtonState.PRESSED;}publicbooleanisDoublePressed(){returnthis.isPressed()&&this.consecutivePress>=2;}publicbooleanisHeld(){returnthis.state==ButtonState.HELD;}publicbooleanisDown(){returnthis.isPressed()||this.isHeld();}publicbooleanisReleased(){returnthis.state==ButtonState.RELEASED;}publicbooleanisIdle(){returnthis.state==ButtonState.IDLE;}publicbooleanisUp(){returnthis.isReleased()||this.isIdle();}}

packageio.binarskugga.event.impl;importio.binarskugga.event.IEvent;importlombok.AllArgsConstructor;@AllArgsConstructorpublicclassMouseScrollEventimplementsIEvent{publiclongwindow;publicdoublescrollX,scrollY;publicdoublex,y;}

packageio.binarskugga.event.impl;importio.binarskugga.event.IEvent;importlombok.AllArgsConstructor;@AllArgsConstructorpublicclassMouseMoveEventimplementsIEvent{publiclongwindow;publicdoublex,y;}

packageio.binarskugga.engine.rendering;importio.binarskugga.math.Vec2f;importlombok.AllArgsConstructor;@AllArgsConstructorpublicclassVertex{privateVec2fposition;privateVec2ftexCoords;publicfloat[]toArray(){returnnewfloat[]{position.x,position.y,texCoords.x,texCoords.y};}publicstaticintsize(){return4*Float.BYTES;}}

packageio.binarskugga.engine.rendering;importio.binarskugga.engine.ILowLevelResource;importio.binarskugga.math.*;importlombok.Getter;importlombok.NonNull;importorg.lwjgl.opengl.GL46;importjava.io.IOException;importjava.nio.file.Files;importjava.nio.file.Paths;importjava.util.HashMap;importjava.util.Map;importstaticorg.lwjgl.opengl.GL46.*;publicclassShaderProgramimplementsILowLevelResource{@Getterprivatefinalintid;@GetterprivatefinalStringname;privatefinalMap<String,Integer>uniforms=newHashMap<>();privateStringvertexCode;privateStringfragmentCode;publicShaderProgram(Stringpath,Stringname){this.name=name;this.id=glCreateProgram();this.vertexCode=readFile(path+name+".vert");this.fragmentCode=readFile(path+name+".frag");}publicShaderProgram(Stringname){this("src/main/resources/shaders/",name);}publicvoidcompile(Map<String,Object>compileContext){for(Map.Entry<String,Object>entry:compileContext.entrySet()){this.vertexCode=this.vertexCode.replaceAll(entry.getKey(),String.valueOf(entry.getValue()));this.fragmentCode=this.fragmentCode.replaceAll(entry.getKey(),String.valueOf(entry.getValue()));}intvertexShader=compileShader(GL46.GL_VERTEX_SHADER,this.vertexCode);intfragmentShader=compileShader(GL46.GL_FRAGMENT_SHADER,this.fragmentCode);glAttachShader(this.id,vertexShader);glAttachShader(this.id,fragmentShader);glLinkProgram(this.id);if(glGetProgrami(this.id,GL46.GL_LINK_STATUS)==0)thrownewRuntimeException("Errorlinkingshader:"+GL46.glGetProgramInfoLog(this.id));glDeleteShader(vertexShader);glDeleteShader(fragmentShader);}publicvoidcompile(){this.compile(newHashMap<>());}@NonNullprivatestaticStringreadFile(Stringpath){try{returnFiles.readString(Paths.get(path));}catch(IOExceptione){thrownewRuntimeException("Failedtoreadshaderfile:"+path,e);}}privatestaticintcompileShader(inttype,StringshaderCode){intid=glCreateShader(type);glShaderSource(id,shaderCode);glCompileShader(id);if(glGetShaderi(id,GL_COMPILE_STATUS)==0){thrownewRuntimeException("Errorcompilingshader:"+GL46.glGetShaderInfoLog(id));}returnid;}publicvoiduniform(@NonNullMat4fmatrix,Stringname){intlocation=this.getUniformLocation(name);glUniformMatrix4fv(location,false,matrix.toArray());}publicvoiduniform(intvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform1i(location,value);}publicvoiduniform(floatvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform1f(location,value);}publicvoiduniform(doublevalue,Stringname){intlocation=this.getUniformLocation(name);glUniform1d(location,value);}publicvoiduniform(@NonNullVec2fvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform2fv(location,value.toArray());}publicvoiduniform(@NonNullVec2dvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform2dv(location,value.toArray());}publicvoiduniform(@NonNullVec2ivalue,Stringname){intlocation=this.getUniformLocation(name);glUniform2iv(location,value.toArray());}publicvoiduniform(@NonNullVec3fvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform3fv(location,value.toArray());}publicvoiduniform(@NonNullVec3dvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform3dv(location,value.toArray());}publicvoiduniform(@NonNullVec3ivalue,Stringname){intlocation=this.getUniformLocation(name);glUniform3iv(location,value.toArray());}publicvoiduniform(@NonNullVec4fvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform4fv(location,value.toArray());}publicvoiduniform(@NonNullVec4dvalue,Stringname){intlocation=this.getUniformLocation(name);glUniform4dv(location,value.toArray());}publicvoiduniform(@NonNullVec4ivalue,Stringname){intlocation=this.getUniformLocation(name);glUniform4iv(location,value.toArray());}publicintgetUniformLocation(Stringname){if(this.uniforms.containsKey(name))returnthis.uniforms.get(name);returnglGetUniformLocation(this.id,name);}@Overridepublicvoidinitialize(){//Nothingtodofornow}@Overridepublicvoiddestroy(){glDeleteProgram(this.id);}publicvoidbind(){glUseProgram(this.id);}publicvoidunbind(){glUseProgram(0);}}

packageio.binarskugga.engine.rendering;importio.binarskugga.engine.Window;importio.binarskugga.event.EventBus;importio.binarskugga.event.ISubscriber;importio.binarskugga.event.impl.MouseScrollEvent;importio.binarskugga.event.impl.WindowResizeEvent;importio.binarskugga.math.Mat4f;importio.binarskugga.math.Vec2f;importio.binarskugga.math.Vec3f;importlombok.Getter;importlombok.NonNull;importnet.engio.mbassy.listener.Handler;importnet.engio.mbassy.listener.Listener;@ListenerpublicclassCamera2DimplementsISubscriber{@GetterprivateVec3fposition;@Getterprivatefloatzoom;privateWindowwindow;privateintlatestWidth;privateintlatestHeight;@GetterprivateMat4fprojection;publicCamera2D(@NonNullWindowwindow){EventBus.global.subscribe(this);this.window=window;this.position=newVec3f();this.zoom=1.0f;this.projection=newMat4f().identity();this.updateProjection(window.width(),window.height());}publicvoidfollow(Vec3fpos,floatsmoothing){Vec3fdelta=pos.sub(this.position).mul(smoothing);this.position=this.position.add(delta);this.updateProjection();}privatevoidupdateProjection(intwidth,intheight){//Calculatehalfextents,scaledbyzoomfloathalfWidth=(width/2f)*this.zoom;floathalfHeight=(height/2f)*this.zoom;//Centertheprojectionaroundthis.positionfloatleft=this.position.x()-halfWidth;floatright=this.position.x()+halfWidth;floatbottom=this.position.y()+halfHeight;floattop=this.position.y()-halfHeight;//Setorthographicprojectionthis.projection.identity().ortho(left,right,bottom,top,-100.0f,100.0f);this.latestWidth=width;this.latestHeight=height;}privatevoidupdateProjection(){if(this.latestWidth==0||this.latestHeight==0){this.updateProjection(this.window.width(),this.window.height());}else{this.updateProjection(this.latestWidth,this.latestHeight);}}@HandlerpublicvoidonWindowResize(WindowResizeEventevent){this.updateProjection(event.width,event.height);}@HandlerpublicvoidonScroll(MouseScrollEventevent){this.zoom+=(float)-event.scrollY*0.1f;this.zoom=Math.max(this.zoom,0.5f);this.zoom=Math.min(this.zoom,2f);this.updateProjection();}}

packageio.binarskugga.engine.rendering;importio.binarskugga.engine.ILowLevelResource;importlombok.Getter;importjavax.imageio.ImageIO;importjava.awt.image.BufferedImage;importjava.io.File;importjava.io.IOException;importjava.nio.ByteBuffer;importjava.nio.ByteOrder;importstaticorg.lwjgl.opengl.GL46.*;publicclassTextureimplementsILowLevelResource{privateintid;@Getterprivateintwidth;@Getterprivateintheight;publicTexture(Stringpath){try{//LoadPNGusingImageIOBufferedImageimage=ImageIO.read(newFile(path));this.width=image.getWidth();this.height=image.getHeight();int[]pixels=image.getRGB(0,0,width,height,null,0,width);ByteBufferbuffer=ByteBuffer.allocateDirect(width*height*4).order(ByteOrder.LITTLE_ENDIAN);for(intpixel:pixels){buffer.put((byte)((pixel>>16)&0xFF));//Rbuffer.put((byte)((pixel>>8)&0xFF));//Gbuffer.put((byte)(pixel&0xFF));//Bbuffer.put((byte)((pixel>>24)&0xFF));//A}buffer.flip();//CreateandconfigureOpenGLtexturethis.id=glGenTextures();glBindTexture(GL_TEXTURE_2D,this.id);//SettextureparametersglTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_S,GL_CLAMP_TO_EDGE);glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_WRAP_T,GL_CLAMP_TO_EDGE);glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST);glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST);//UploadtexturedataglTexImage2D(GL_TEXTURE_2D,0,GL_RGBA,this.width,this.height,0,GL_RGBA,GL_UNSIGNED_BYTE,buffer);glGenerateMipmap(GL_TEXTURE_2D);//Generatemipmapsforbetterscalingthis.unbind();}catch(IOExceptione){thrownewRuntimeException("Failedtoloadtexture:"+path,e);}}@Overridepublicvoidinitialize(){}@Overridepublicvoiddestroy(){glDeleteTextures(id);}publicvoidbind(intunit){glActiveTexture(GL_TEXTURE0+unit);glBindTexture(GL_TEXTURE_2D,this.id);}publicvoidbind(){this.bind(0);}publicvoidunbind(){glBindTexture(GL_TEXTURE_2D,0);}}

packageio.binarskugga.engine.rendering;importio.binarskugga.engine.Textures;importlombok.Getter;importlombok.NonNull;publicclassTextureAtlas{@GetterprivateStringtextureName;@GetterprivateTexturetexture;@GetterprivatefinalintspriteWidth,spriteHeight;@Getterprivatefinalintpadding;publicTextureAtlas(StringtextureName,intspriteWidth,intspriteHeight,intpadding){this.textureName=textureName;this.spriteWidth=spriteWidth;this.spriteHeight=spriteHeight;this.padding=padding;}publicvoidlink(@NonNullTexturestextures){this.texture=textures.get(textureName);}}

packageio.binarskugga.engine.rendering;importio.binarskugga.engine.ILowLevelResource;importio.binarskugga.math.Mat4f;importio.binarskugga.math.Vec2f;importorg.lwjgl.BufferUtils;importjava.nio.FloatBuffer;importjava.util.List;importstaticorg.lwjgl.opengl.GL46.*;publicclassMeshBatchimplementsILowLevelResource{//Sizeofallthecomponentforoneinstance:2floatsforatlasposition+16floatsfortransformationsprivatestaticfinalintINSTANCE_SIZE=18;privateFloatBufferinstanceBuffer;privatefinalintmaxInstances;privatefinalint[]indices;privatefinalfloat[]vertices;privateintvao;privateintverticesVbo;privateintinstancedVbo;privateintebo;publicMeshBatch(int[]indices,float[]vertices,intmaxInstances){this.maxInstances=maxInstances;this.indices=indices;this.vertices=vertices;this.instanceBuffer=BufferUtils.createFloatBuffer(this.maxInstances*INSTANCE_SIZE);}@Overridepublicvoidinitialize(){//CreateVAOthis.vao=glGenVertexArrays();glBindVertexArray(this.vao);//CreateVerticesVBOthis.verticesVbo=glGenBuffers();glBindBuffer(GL_ARRAY_BUFFER,this.verticesVbo);glBufferData(GL_ARRAY_BUFFER,this.vertices,GL_STATIC_DRAW);glVertexAttribPointer(0,3,GL_FLOAT,false,3*Float.BYTES,0);glEnableVertexAttribArray(0);//CreateInstancedVBOthis.instancedVbo=glGenBuffers();glBindBuffer(GL_ARRAY_BUFFER,this.instancedVbo);glBufferData(GL_ARRAY_BUFFER,(long)this.maxInstances*INSTANCE_SIZE,GL_DYNAMIC_DRAW);intstride=INSTANCE_SIZE*Float.BYTES;//AtlasPositionglVertexAttribPointer(1,2,GL_FLOAT,false,stride,0);glEnableVertexAttribArray(1);glVertexAttribDivisor(1,1);//TransformationglVertexAttribPointer(2,4,GL_FLOAT,false,stride,2*Float.BYTES);glVertexAttribPointer(3,4,GL_FLOAT,false,stride,(2+4)*Float.BYTES);glVertexAttribPointer(4,4,GL_FLOAT,false,stride,(2+8)*Float.BYTES);glVertexAttribPointer(5,4,GL_FLOAT,false,stride,(2+12)*Float.BYTES);glEnableVertexAttribArray(2);glEnableVertexAttribArray(3);glEnableVertexAttribArray(4);glEnableVertexAttribArray(5);glVertexAttribDivisor(2,1);glVertexAttribDivisor(3,1);glVertexAttribDivisor(4,1);glVertexAttribDivisor(5,1);//CreateEBOthis.ebo=glGenBuffers();glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,this.ebo);glBufferData(GL_ELEMENT_ARRAY_BUFFER,this.indices,GL_STATIC_DRAW);glBindVertexArray(0);}publicvoiddraw(intcount){glBindVertexArray(this.vao);glDrawElementsInstanced(GL_TRIANGLE_STRIP,this.indices.length,GL_UNSIGNED_INT,0,count);}publicvoidupdate(List<Vec2f>atlasPosition,List<Mat4f>transformations){glBindBuffer(GL_ARRAY_BUFFER,this.instancedVbo);this.instanceBuffer.clear();for(inti=0;i<atlasPosition.size();i++){Vec2fposition=atlasPosition.get(i);this.instanceBuffer.put(position.x).put(position.y);Mat4ftransformation=transformations.get(i);this.instanceBuffer.put(transformation.toArray());}this.instanceBuffer.flip();glBufferSubData(GL_ARRAY_BUFFER,0,this.instanceBuffer);}@Overridepublicvoiddestroy(){if(this.instanceBuffer!=null){this.instanceBuffer.clear();}glDeleteVertexArrays(this.vao);glDeleteBuffers(this.verticesVbo);glDeleteBuffers(this.instancedVbo);glDeleteBuffers(this.ebo);}}

packageio.binarskugga.engine.input;publicenumButtonState{PRESSED,HELD,RELEASED,IDLE}

packageio.binarskugga.engine.input;importlombok.Getter;importjava.util.ArrayList;importjava.util.List;importstaticorg.lwjgl.glfw.GLFW.*;publicclassKeyboardButton{publicstaticList<KeyboardButton>all=newArrayList<>();publicstaticKeyboardButtonUNKNOWN=newKeyboardButton(GLFW_KEY_UNKNOWN,"unknown");publicstaticKeyboardButtonSPACE=newKeyboardButton(GLFW_KEY_SPACE,"space");publicstaticKeyboardButtonAPOSTROPHE=newKeyboardButton(GLFW_KEY_APOSTROPHE,"apostrophe");publicstaticKeyboardButtonCOMMA=newKeyboardButton(GLFW_KEY_COMMA,"comma");publicstaticKeyboardButtonMINUS=newKeyboardButton(GLFW_KEY_MINUS,"minus");publicstaticKeyboardButtonPERIOD=newKeyboardButton(GLFW_KEY_PERIOD,"period");publicstaticKeyboardButtonSLASH=newKeyboardButton(GLFW_KEY_SLASH,"slash");publicstaticKeyboardButtonZERO=newKeyboardButton(GLFW_KEY_0,"zero");publicstaticKeyboardButtonONE=newKeyboardButton(GLFW_KEY_1,"one");publicstaticKeyboardButtonTWO=newKeyboardButton(GLFW_KEY_2,"two");publicstaticKeyboardButtonTHREE=newKeyboardButton(GLFW_KEY_3,"three");publicstaticKeyboardButtonFOUR=newKeyboardButton(GLFW_KEY_4,"four");publicstaticKeyboardButtonFIVE=newKeyboardButton(GLFW_KEY_5,"five");publicstaticKeyboardButtonSIX=newKeyboardButton(GLFW_KEY_6,"six");publicstaticKeyboardButtonSEVEN=newKeyboardButton(GLFW_KEY_7,"seven");publicstaticKeyboardButtonEIGHT=newKeyboardButton(GLFW_KEY_8,"eight");publicstaticKeyboardButtonNINE=newKeyboardButton(GLFW_KEY_9,"nine");publicstaticKeyboardButtonSEMICOLON=newKeyboardButton(GLFW_KEY_SEMICOLON,"semicolon");publicstaticKeyboardButtonEQUAL=newKeyboardButton(GLFW_KEY_EQUAL,"equal");publicstaticKeyboardButtonA=newKeyboardButton(GLFW_KEY_A,"a");publicstaticKeyboardButtonB=newKeyboardButton(GLFW_KEY_B,"b");publicstaticKeyboardButtonC=newKeyboardButton(GLFW_KEY_C,"c");publicstaticKeyboardButtonD=newKeyboardButton(GLFW_KEY_D,"d");publicstaticKeyboardButtonE=newKeyboardButton(GLFW_KEY_E,"e");publicstaticKeyboardButtonF=newKeyboardButton(GLFW_KEY_F,"f");publicstaticKeyboardButtonG=newKeyboardButton(GLFW_KEY_G,"g");publicstaticKeyboardButtonH=newKeyboardButton(GLFW_KEY_H,"h");publicstaticKeyboardButtonI=newKeyboardButton(GLFW_KEY_I,"i");publicstaticKeyboardButtonJ=newKeyboardButton(GLFW_KEY_J,"j");publicstaticKeyboardButtonK=newKeyboardButton(GLFW_KEY_K,"k");publicstaticKeyboardButtonL=newKeyboardButton(GLFW_KEY_L,"l");publicstaticKeyboardButtonM=newKeyboardButton(GLFW_KEY_M,"m");publicstaticKeyboardButtonN=newKeyboardButton(GLFW_KEY_N,"n");publicstaticKeyboardButtonO=newKeyboardButton(GLFW_KEY_O,"o");publicstaticKeyboardButtonP=newKeyboardButton(GLFW_KEY_P,"p");publicstaticKeyboardButtonQ=newKeyboardButton(GLFW_KEY_Q,"q");publicstaticKeyboardButtonR=newKeyboardButton(GLFW_KEY_R,"r");publicstaticKeyboardButtonS=newKeyboardButton(GLFW_KEY_S,"s");publicstaticKeyboardButtonT=newKeyboardButton(GLFW_KEY_T,"t");publicstaticKeyboardButtonU=newKeyboardButton(GLFW_KEY_U,"u");publicstaticKeyboardButtonV=newKeyboardButton(GLFW_KEY_V,"v");publicstaticKeyboardButtonW=newKeyboardButton(GLFW_KEY_W,"w");publicstaticKeyboardButtonX=newKeyboardButton(GLFW_KEY_X,"x");publicstaticKeyboardButtonY=newKeyboardButton(GLFW_KEY_Y,"y");publicstaticKeyboardButtonZ=newKeyboardButton(GLFW_KEY_Z,"z");publicstaticKeyboardButtonLEFT_BRACKET=newKeyboardButton(GLFW_KEY_LEFT_BRACKET,"leftbracket");publicstaticKeyboardButtonBACKSLASH=newKeyboardButton(GLFW_KEY_BACKSLASH,"backslash");publicstaticKeyboardButtonRIGHT_BRACKET=newKeyboardButton(GLFW_KEY_RIGHT_BRACKET,"rightbracket");publicstaticKeyboardButtonGRAVE_ACCENT=newKeyboardButton(GLFW_KEY_GRAVE_ACCENT,"graveaccent");publicstaticKeyboardButtonESCAPE=newKeyboardButton(GLFW_KEY_ESCAPE,"escape");publicstaticKeyboardButtonENTER=newKeyboardButton(GLFW_KEY_ENTER,"enter");publicstaticKeyboardButtonTAB=newKeyboardButton(GLFW_KEY_TAB,"tab");publicstaticKeyboardButtonBACKSPACE=newKeyboardButton(GLFW_KEY_BACKSPACE,"backspace");publicstaticKeyboardButtonINSERT=newKeyboardButton(GLFW_KEY_INSERT,"insert");publicstaticKeyboardButtonDELETE=newKeyboardButton(GLFW_KEY_DELETE,"delete");publicstaticKeyboardButtonRIGHT=newKeyboardButton(GLFW_KEY_RIGHT,"right");publicstaticKeyboardButtonLEFT=newKeyboardButton(GLFW_KEY_LEFT,"left");publicstaticKeyboardButtonDOWN=newKeyboardButton(GLFW_KEY_DOWN,"down");publicstaticKeyboardButtonUP=newKeyboardButton(GLFW_KEY_UP,"up");publicstaticKeyboardButtonPAGE_UP=newKeyboardButton(GLFW_KEY_PAGE_UP,"pageup");publicstaticKeyboardButtonPAGE_DOWN=newKeyboardButton(GLFW_KEY_PAGE_DOWN,"pagedown");publicstaticKeyboardButtonHOME=newKeyboardButton(GLFW_KEY_HOME,"home");publicstaticKeyboardButtonEND=newKeyboardButton(GLFW_KEY_END,"end");publicstaticKeyboardButtonCAPS_LOCK=newKeyboardButton(GLFW_KEY_CAPS_LOCK,"capslock");publicstaticKeyboardButtonSCROLL_LOCK=newKeyboardButton(GLFW_KEY_SCROLL_LOCK,"scrolllock");publicstaticKeyboardButtonNUM_LOCK=newKeyboardButton(GLFW_KEY_NUM_LOCK,"numlock");publicstaticKeyboardButtonPRINT_SCREEN=newKeyboardButton(GLFW_KEY_PRINT_SCREEN,"printscreen");publicstaticKeyboardButtonPAUSE=newKeyboardButton(GLFW_KEY_PAUSE,"pause");publicstaticKeyboardButtonF1=newKeyboardButton(GLFW_KEY_F1,"f1");publicstaticKeyboardButtonF2=newKeyboardButton(GLFW_KEY_F2,"f2");publicstaticKeyboardButtonF3=newKeyboardButton(GLFW_KEY_F3,"f3");publicstaticKeyboardButtonF4=newKeyboardButton(GLFW_KEY_F4,"f4");publicstaticKeyboardButtonF5=newKeyboardButton(GLFW_KEY_F5,"f5");publicstaticKeyboardButtonF6=newKeyboardButton(GLFW_KEY_F6,"f6");publicstaticKeyboardButtonF7=newKeyboardButton(GLFW_KEY_F7,"f7");publicstaticKeyboardButtonF8=newKeyboardButton(GLFW_KEY_F8,"f8");publicstaticKeyboardButtonF9=newKeyboardButton(GLFW_KEY_F9,"f9");publicstaticKeyboardButtonF10=newKeyboardButton(GLFW_KEY_F10,"f10");publicstaticKeyboardButtonF11=newKeyboardButton(GLFW_KEY_F11,"f11");publicstaticKeyboardButtonF12=newKeyboardButton(GLFW_KEY_F12,"f12");publicstaticKeyboardButtonF13=newKeyboardButton(GLFW_KEY_F13,"f13");publicstaticKeyboardButtonF14=newKeyboardButton(GLFW_KEY_F14,"f14");publicstaticKeyboardButtonF15=newKeyboardButton(GLFW_KEY_F15,"f15");publicstaticKeyboardButtonF16=newKeyboardButton(GLFW_KEY_F16,"f16");publicstaticKeyboardButtonF17=newKeyboardButton(GLFW_KEY_F17,"f17");publicstaticKeyboardButtonF18=newKeyboardButton(GLFW_KEY_F18,"f18");publicstaticKeyboardButtonF19=newKeyboardButton(GLFW_KEY_F19,"f19");publicstaticKeyboardButtonF20=newKeyboardButton(GLFW_KEY_F20,"f20");publicstaticKeyboardButtonF21=newKeyboardButton(GLFW_KEY_F21,"f21");publicstaticKeyboardButtonF22=newKeyboardButton(GLFW_KEY_F22,"f22");publicstaticKeyboardButtonF23=newKeyboardButton(GLFW_KEY_F23,"f23");publicstaticKeyboardButtonF24=newKeyboardButton(GLFW_KEY_F24,"f24");publicstaticKeyboardButtonF25=newKeyboardButton(GLFW_KEY_F25,"f25");publicstaticKeyboardButtonKP_ZERO=newKeyboardButton(GLFW_KEY_KP_0,"kpzero");publicstaticKeyboardButtonKP_ONE=newKeyboardButton(GLFW_KEY_KP_1,"kpone");publicstaticKeyboardButtonKP_TWO=newKeyboardButton(GLFW_KEY_KP_2,"kptwo");publicstaticKeyboardButtonKP_THREE=newKeyboardButton(GLFW_KEY_KP_3,"kpthree");publicstaticKeyboardButtonKP_FOUR=newKeyboardButton(GLFW_KEY_KP_4,"kpfour");publicstaticKeyboardButtonKP_FIVE=newKeyboardButton(GLFW_KEY_KP_5,"kpfive");publicstaticKeyboardButtonKP_SIX=newKeyboardButton(GLFW_KEY_KP_6,"kpsix");publicstaticKeyboardButtonKP_SEVEN=newKeyboardButton(GLFW_KEY_KP_7,"kpseven");publicstaticKeyboardButtonKP_EIGHT=newKeyboardButton(GLFW_KEY_KP_8,"kpeight");publicstaticKeyboardButtonKP_NINE=newKeyboardButton(GLFW_KEY_KP_9,"kpnine");publicstaticKeyboardButtonKP_DECIMAL=newKeyboardButton(GLFW_KEY_KP_DECIMAL,"kpdecimal");publicstaticKeyboardButtonKP_DIVIDE=newKeyboardButton(GLFW_KEY_KP_DIVIDE,"kpdivide");publicstaticKeyboardButtonKP_MULTIPLY=newKeyboardButton(GLFW_KEY_KP_MULTIPLY,"kpmultiply");publicstaticKeyboardButtonKP_SUBTRACT=newKeyboardButton(GLFW_KEY_KP_SUBTRACT,"kpsubtract");publicstaticKeyboardButtonKP_ADD=newKeyboardButton(GLFW_KEY_KP_ADD,"kpadd");publicstaticKeyboardButtonKP_ENTER=newKeyboardButton(GLFW_KEY_KP_ENTER,"kpenter");publicstaticKeyboardButtonKP_EQUAL=newKeyboardButton(GLFW_KEY_KP_EQUAL,"kpequal");publicstaticKeyboardButtonLEFT_SHIFT=newKeyboardButton(GLFW_KEY_LEFT_SHIFT,"leftshift");publicstaticKeyboardButtonLEFT_CONTROL=newKeyboardButton(GLFW_KEY_LEFT_CONTROL,"leftcontrol");publicstaticKeyboardButtonLEFT_ALT=newKeyboardButton(GLFW_KEY_LEFT_ALT,"leftalt");publicstaticKeyboardButtonLEFT_SUPER=newKeyboardButton(GLFW_KEY_LEFT_SUPER,"leftsuper");publicstaticKeyboardButtonRIGHT_SHIFT=newKeyboardButton(GLFW_KEY_RIGHT_SHIFT,"rightshift");publicstaticKeyboardButtonRIGHT_CONTROL=newKeyboardButton(GLFW_KEY_RIGHT_CONTROL,"rightcontrol");publicstaticKeyboardButtonRIGHT_ALT=newKeyboardButton(GLFW_KEY_RIGHT_ALT,"rightalt");publicstaticKeyboardButtonRIGHT_SUPER=newKeyboardButton(GLFW_KEY_RIGHT_SUPER,"rightsuper");publicstaticKeyboardButtonMENU=newKeyboardButton(GLFW_KEY_MENU,"menu");@Getterpublicintcode;@GetterpublicStringname;KeyboardButton(intcode,Stringname){this.code=code;this.name=name;KeyboardButton.all.add(this);}publicstaticKeyboardButtonget(intcode){for(KeyboardButtonkey:KeyboardButton.all){if(key.code==code)returnkey;}returnKeyboardButton.UNKNOWN;}publicstaticKeyboardButtonget(Stringname){for(KeyboardButtonkey:KeyboardButton.all){if(key.name.equals(name))returnkey;}returnKeyboardButton.UNKNOWN;}}

packageio.binarskugga.engine.input;importio.binarskugga.engine.Clock;importio.binarskugga.event.EventBus;importio.binarskugga.event.impl.KeyEvent;importorg.lwjgl.glfw.GLFW;importjava.util.HashMap;importjava.util.Map;importjava.util.concurrent.TimeUnit;importstaticio.binarskugga.Constants.CONSECUTIVE_PRESS_TIMEOUT_MS;importstaticorg.lwjgl.glfw.GLFW.GLFW_PRESS;publicclassKeyboardInputHandler{privatefinalMap<KeyboardButton,ButtonState>states=newHashMap<>();privatefinalMap<KeyboardButton,Long>lastPressed=newHashMap<>();privatefinalMap<KeyboardButton,Integer>consecutivePresses=newHashMap<>();publiclongconsecutiveTimeout=TimeUnit.MILLISECONDS.toNanos(CONSECUTIVE_PRESS_TIMEOUT_MS);publicButtonStatestate(KeyboardButtonkey){returnthis.states.getOrDefault(key,ButtonState.IDLE);}publicintconsecutivePress(KeyboardButtonkey){returnthis.consecutivePresses.getOrDefault(key,0);}publicKeyboardInputHandler(){for(KeyboardButtonkey:KeyboardButton.all){this.states.putIfAbsent(key,ButtonState.IDLE);this.consecutivePresses.putIfAbsent(key,0);this.lastPressed.putIfAbsent(key,Clock.global.time());}}publicvoidprocess(longwindowID){for(KeyboardButtonkey:KeyboardButton.all){intcode=key.code();if(code<0)continue;intaction=GLFW.glfwGetKey(windowID,code);ButtonStatepreviousState=this.states.get(key);if(previousState==ButtonState.IDLE&&action==GLFW.GLFW_RELEASE)continue;KeyEventevent=newKeyEvent();event.key=key;//Keyisstillpressedthis.stillPressed(action,previousState,event);//Keywasjustpressedthis.justPressed(action,previousState,event);//Keyisstillreleasedthis.stillReleased(action,previousState,event);//Keywasjustreleasedthis.justReleased(action,previousState,event);event.consecutivePress=this.consecutivePresses.get(key);EventBus.global.publish(event);}}privatevoidjustPressed(intaction,ButtonStatepreviousState,KeyEventevent){//Keyisnotcurrentlybeingpressedif(action!=GLFW_PRESS)return;//Weweren'treleasedoridlepastiteration,soit'snotanewpressif(previousState!=ButtonState.IDLE&&previousState!=ButtonState.RELEASED)return;longcurrentTime=Clock.global.time();//Filleventdatathis.states.put(event.key,ButtonState.PRESSED);event.state=ButtonState.PRESSED;//Computeconsecutivepressesthis.consecutivePresses.computeIfPresent(event.key,(key,consecutive)->{if(consecutive==0)return1;if(currentTime-this.lastPressed.get(event.key)<=this.consecutiveTimeout){returnconsecutive+1;}else{return1;}});}privatevoidstillPressed(intaction,ButtonStatepreviousState,KeyEventevent){//Keyisnotcurrentlybeingpressedif(action!=GLFW_PRESS)return;//Weweren'tpressedorhelppastiteration,soit'sanewpressif(previousState!=ButtonState.PRESSED&&previousState!=ButtonState.HELD)return;this.states.put(event.key,ButtonState.HELD);event.state=ButtonState.HELD;}privatevoidjustReleased(intaction,ButtonStatepreviousState,KeyEventevent){//Keyisnotcurrentlyreleasedif(action!=GLFW.GLFW_RELEASE)return;//Itwasn'tpressedorheldlastiteration,itwasn'tjustreleasedif(previousState!=ButtonState.PRESSED&&previousState!=ButtonState.HELD)return;this.states.put(event.key,ButtonState.RELEASED);event.state=ButtonState.RELEASED;//UpdatelastpressedlongcurrentTime=Clock.global.time();this.lastPressed.put(event.key,currentTime);}privatevoidstillReleased(intaction,ButtonStatepreviousState,KeyEventevent){//Keyisnotcurrentlyreleasedif(action!=GLFW.GLFW_RELEASE)return;//Itwasn'treleasedoridlelastiteration,itwasjustreleasedif(previousState!=ButtonState.IDLE&&previousState!=ButtonState.RELEASED)return;this.states.put(event.key,ButtonState.IDLE);event.state=ButtonState.IDLE;//ComputeconsecutivepresseslongcurrentTime=Clock.global.time();this.consecutivePresses.computeIfPresent(event.key,(key,consecutive)->{if(currentTime-this.lastPressed.get(event.key)>this.consecutiveTimeout)return0;elsereturnconsecutive;});}}

packageio.binarskugga.engine.light;importio.binarskugga.math.Vec3f;publicinterfaceILight{Vec3fcolor();floatintensity();}

packageio.binarskugga.engine.light;importio.binarskugga.math.Vec3f;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;@AllArgsConstructor@NoArgsConstructorpublicclassAmbientLightimplementsILight{@GetterpublicVec3fcolor=newVec3f(1.0f,1.0f,1.0f);@Getterpublicfloatintensity=0.3f;}

packageio.binarskugga.engine.light;importio.binarskugga.math.Vec3f;importlombok.AllArgsConstructor;importlombok.Getter;importlombok.NoArgsConstructor;@AllArgsConstructor@NoArgsConstructorpublicclassLightimplementsILight{@GetterpublicVec3fposition;@GetterpublicVec3fcolor;@Getterpublicfloatintensity;//Attenuationpublicfloatconstant=1.0f;publicfloatlinear=0.045f;publicfloatquadratic=0.0075f;publicLight(Vec3fposition,Vec3fcolor,floatintensity){this.position=position;this.color=color;this.intensity=intensity;}publicfloat[]toUBOData(){returnnewfloat[]{this.position.x,this.position.y,this.position.z,0.0f,this.color.x,this.color.y,this.color.z,this.intensity,this.constant,this.linear,this.quadratic,};}}

packageio.binarskugga.engine.light;importio.binarskugga.engine.ILowLevelResource;importio.binarskugga.engine.rendering.ShaderProgram;importorg.lwjgl.BufferUtils;importjava.nio.FloatBuffer;importjava.util.Arrays;importjava.util.List;importstaticio.binarskugga.Constants.MAX_LIGHTS;importstaticorg.lwjgl.opengl.GL46.*;publicclassLightBufferimplementsILowLevelResource{privatefinalintLIGHT_SIZE=16;privateintid;privatefinalintbinding;privateFloatBufferbuffer;publicLightBuffer(intbinding){this.binding=binding;this.buffer=BufferUtils.createFloatBuffer(MAX_LIGHTS*LIGHT_SIZE);}@Overridepublicvoidinitialize(){this.id=glGenBuffers();glBindBuffer(GL_SHADER_STORAGE_BUFFER,this.id);glBufferData(GL_SHADER_STORAGE_BUFFER,MAX_LIGHTS*LIGHT_SIZE*Float.BYTES,GL_DYNAMIC_DRAW);glBindBufferBase(GL_SHADER_STORAGE_BUFFER,this.binding,this.id);}@Overridepublicvoiddestroy(){glDeleteBuffers(this.id);}publicvoidbind(ShaderProgramprogram){intblockIndex=glGetProgramResourceIndex(program.id(),GL_SHADER_STORAGE_BLOCK,"uLights");glShaderStorageBlockBinding(program.id(),blockIndex,this.binding);}publicvoidupdate(List<Light>lights){this.buffer.clear();for(Lightlight:lights){float[]lightData=light.toUBOData();this.buffer.put(lightData);}this.buffer.flip();glBindBuffer(GL_SHADER_STORAGE_BUFFER,this.id);glBufferSubData(GL_SHADER_STORAGE_BUFFER,0,this.buffer);}}

#version460corelayout(location=0)invec3iPos;layout(location=1)invec2atlasPosition;layout(location=2)inmat4iTransform;//Useslocations[2-5]uniformmat4uProjection;uniformvec2uTextureSize;uniformintuTexturePadding;uniformvec2uSpriteSize;outvec2oUV;outvec3oFragPos;voidmain(){vec4worldPos=iTransform*vec4(iPos,1.0);oFragPos=worldPos.xyz;//SelectUVbasedonatlaspositionfloatxBleeding=1.0/uTextureSize.x;floatyBleeding=1.0/uTextureSize.y;floatxInternalPadding=uTexturePadding*atlasPosition.x;floatyInternalPadding=uTexturePadding*atlasPosition.y;floatu0=((atlasPosition.x*uSpriteSize.x)+uTexturePadding+xInternalPadding)/uTextureSize.x;floatv0=((atlasPosition.y*uSpriteSize.y)+uTexturePadding+yInternalPadding)/uTextureSize.y;floatu1=u0+(uSpriteSize.x/uTextureSize.x);floatv1=v0+(uSpriteSize.y/uTextureSize.y);switch(gl_VertexID%4){case0:oUV=vec2(u0+xBleeding,v0+yBleeding);break;case1:oUV=vec2(u0+xBleeding,v1-yBleeding);break;case2:oUV=vec2(u1-xBleeding,v0+yBleeding);break;case3:oUV=vec2(u1-xBleeding,v1-yBleeding);break;}gl_Position=uProjection*worldPos;}

#version460core#defineMAX_LIGHTS__MAX_LIGHTS__invec2oUV;invec3oFragPos;outvec4oColor;structLight{vec3position;vec3color;floatintensity;floatconstant;floatlinear;floatquadratic;};uniformfloatuAmbientIntensity;uniformvec3uAmbientColor;uniformintuLightCount;layout(std430,binding=0)bufferuLights{Lightlights[MAX_LIGHTS];};uniformsampler2DuTexture0;vec3calculateLight(Lightlight,vec3fragPos);voidmain(){vec4textureColor=texture(uTexture0,oUV);if(textureColor.a<0.01)discard;//Ambientvec3ambient=uAmbientColor*uAmbientIntensity;//Lightsvec3lightSum=vec3(0.0);for(inti=0;i<uLightCount;i++){lightSum+=calculateLight(lights[i],oFragPos);}vec3totalLight=ambient+lightSum;oColor=vec4(textureColor.rgb*totalLight,textureColor.a);}vec3calculateLight(Lightlight,vec3fragPos){if(fragPos.z>light.position.z)returnvec3(0);floatdistance=length(light.position-fragPos);floatattenuation=1.0/(light.constant+(light.linear*distance)+(light.quadratic*distance*distance));returnlight.color*light.intensity*attenuation;}

